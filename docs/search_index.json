[["index.html", "ReCentering Psych Stats: Analysis of Variance BOOK COVER", " ReCentering Psych Stats: Analysis of Variance Lynette H Bikos, PhD, ABPP BOOK COVER An image of the book cover. It includes four quadrants of non-normal distributions representing gender, race/ethnicty, sustainability/global concerns, and journal articles "],["preface.html", "Preface Copyright with Open Access", " Preface If you are viewing this document, you should know that this is a book-in-progress. Early drafts are released for the purpose teaching my classes and gaining formative feedback from a host of stakeholders. The document was last updated on 07 Aug 2021 Screencasted Lecture Link To center a variable in regression means to set its value at zero and interpret all other values in relation to this reference point. Regarding race and gender, researchers often center male and White at zero. Further, it is typical that research vignettes in statistics textbooks are similarly seated in a White, Western (frequently U.S.), heteronormative, framework. The purpose of this project is to create a set of open educational resources (OER) appropriate for doctoral and post-doctoral training that contribute to a socially responsive pedagogy  that is, it contributes to justice, equity, diversity, and inclusion. Statistics training in doctoral programs are frequently taught with fee-for-use programs (e.g., SPSS/AMOS, SAS, MPlus) that may not be readily available to the post-doctoral professional. In recent years, there has been an increase and improvement in R packages (e.g., psych, lavaan) used for in analyses common to psychological research. Correspondingly, many graduate programs are transitioning to statistics training in R (free and open source). This is a challenge for post-doctoral psychologists who were trained with other software. This OER will offer statistics training with R and be freely available (specifically in a GitHub respository and posted through GitHub Pages) under a Creative Commons Attribution - Non Commercial - Share Alike license [CC BY-NC-SA 4.0]. Training models for doctoral programs in HSP are commonly scholar-practitioner, scientist-practitioner, or clinical-scientist. An emerging model, the scientist-practitioner-advocacy training model incorporates social justice advocacy so that graduates are equipped to recognize and address the sociocultural context of oppression and unjust distribution of resources and opportunities (Mallinckrodt et al., 2014). In statistics textbooks, the use of research vignettes engages the learner around a tangible scenario for identifying independent variables, dependent variables, covariates, and potential mechanisms of change. Many students recall examples in Fields (2012) popular statistics text: Viagra to teach one-way ANOVA, beer goggles for two-way ANOVA, and bushtucker for repeated measures. What if the research vignettes were more socially responsive? In this OER, research vignettes will be from recently published articles where: the authors identity is from a group where scholarship is historically marginalized (e.g., BIPOC, LGBTQ+, LMIC[low-middle income countries]), the research is responsive to issues of justice, equity, inclusion, diversity, the lessons statistic is used in the article, and there is sufficient information in the article to simulate the data for the chapter example(s) and practice problem(s); or it is publicly available. In training for multicultural competence, the saying, A fish doesnt know that its wet is often used to convey the notion that we are often unaware of our own cultural characteristics. In recent months and years, there has been an increased awakening to the institutional and systemic racism that our systems are perpetuating. Queuing from the water metaphor, I am hopeful that a text that is recentered in the ways I have described can contribute to changing the water in higher education and in the profession of psychology. Copyright with Open Access This book is published under a a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License. This means that this book can be reused, remixed, retained, revised and redistributed (including commercially) as long as appropriate credit is given to the authors. If you remix, or modify the original version of this open textbook, you must redistribute all versions of this open textbook under the same license - CC BY-SA. A GitHub open-source repository contains all of the text and source code for the book, including data and images. References "],["acknowledgements.html", "ACKNOWLEDGEMENTS", " ACKNOWLEDGEMENTS As a doctoral student at the University of Kansas (1992-2005), I learned that a foreign language was required for graduation. Please note that as one who studies the intersections of global, vocational, and sustainable psychology, I regret that I do not have language skills beyond English. This could have been met with credit from high school my rural, mid-Missouri high school did not offer such classes. This requirement would have typically been met with courses taken during an undergraduate program  but my non-teaching degree in the University of Missouris School of Education was exempt from this. The requirement could have also been met with a computer language (fortran, C++)  I did not have any of those either. There was a tiny footnote on my doctoral degree plan that indicated that a 2-credit course, SPSS for Windows would substitute for the language requirement. Given that it was taught by my one of my favorite professors, I readily signed up. As it turns out, Samuel B. Green, PhD, was using the course to draft chapters in the textbook (Green &amp; Salkind, 2014) that has been so helpful for so many. Unfortunately, Drs. Green (1947 - 2018) and Salkind (2947 - 2017) are no longer with us. I have worn out numerous versions of their text. Another favorite text of mine was Dr. Barbara Byrnes (2016), Structural Equation Modeling with AMOS. I loved the way she worked through each problem and paired it with a published journal article, so that the user could see how the statistical evaluation fit within the larger project/article. I took my tea-stained text with me to a workshop she taught at APA and was proud of the signature she added to it (a little catfur might have fallen out). Dr. Byrne created SEM texts for a number of statistical programs (e.g., LISREL, EQS, MPlus). As I was learning R, I wrote Dr. Byrne, asking if she had an edition teaching SEM/CFA with R. She promptly wrote back, saying that she did not have the bandwidth to learn a new statistics package. We lost Dr. Byrne in December 2020. I am so grateful to these role models for their contributions to my statistical training. I am also grateful for the doctoral students who have taken my courses and are continuing to provide input for how to improve the materials. The inspiration for training materials that re*center statistics and research methods came from the Academics for Black Survival and Wellness Initiative. This project, co-founded by Della V. Mosley, Ph.D., and Pearis L. Bellamy, M.S., made clear the necessity and urgency for change in higher education and the profession of psychology. At very practical levels, I am indebted to SPUs Library, and more specifically, SPUs Education, Technology, and Media Department. Assistant Dean for Instructional Design and Emerging Technologies, R. John Robertson, MSc, MCS, has offered unlimited consultation, support, and connection. Senior Instructional Designer in Graphics &amp; Illustrations, Dominic Wilkinson, designed the logo and bookcover. Psychology and Scholarly Communications Librarian, Kristin Hoffman, MLIS, has provided consultation on topics ranging from OERS to citations. I am alo indebted to Associate Vice President, Teaching and Learning at Kwantlen Polytechnic University, Rajiv Jhangiani, PhD. Dr. Jhangianis text (2019) was the first OER I ever used and I was grateful for his encouraging conversation. Financial support for this text has been provided from the Call to Action on Equity, Inclusion, Diversity, Justice, and Social Responsivity Request for Proposals grant from the Association of Psychology Postdoctoral and Internship Centers (2021-2022). References "],["ReCintro.html", "Chapter 1 Introduction 1.1 What to expect in each chapter 1.2 Strategies for Accessing and Using this OER 1.3 If You are New to R", " Chapter 1 Introduction Screencasted Lecture Link 1.1 What to expect in each chapter This textbook is intended as applied, in that a primary goal is to help the scientist-practitioner-advocate use a variety of statistics in research problems and writing them up for a program evaluation, dissertation, or journal article. In support of that goal, I try to provide just enough conceptual information so that the researcher can select the appropriate statistic (i.e., distinguishing between when ANOVA is appropriate and when regression is appropriate) and assign variables to their proper role (e.g., covariate, moderator, mediator). This conceptual approach does include occasional, step-by-step, hand-calculations (only we calculate them arithmetically in R) to provide a visceral feeling of what is happening within the statistical algorithm that may be invisible to the researcher. Additionally, the conceptual review includes a review of the assumptions about the characteristics of the data and research design that are required for the statistic. Statistics can be daunting, so I have worked hard to establish a workflow through each analysis. When possible, I include a flowchart that is referenced frequently in each chapter and assists the the researcher keep track of their place in the many steps and choices that accompany even the simplest of analyses. As with many statistics texts, each chapter includes a research vignette. Somewhat unique to this resource is that the vignettes are selected from recently published articles. Each vignette is chosen with the intent to meet as many of the following criteria as possible: the statistic that is the focus of the chapter was properly used in the article, the authors identity is from a group where scholarship is historically marginalized (e.g., BIPOC, LGBTQ+, LMIC [low middle income countries]), the research has a justice, equity, inclusion, diversity, and social responsivity focus and will contribute positively to a social justice pedagogy, and the data is available in a repository or there is sufficient information in the article to simulate the data for the chapter example(s) and practice problem(s). In each chapter we employ R packages that will efficiently calculate the statistic and the dashboard of metrics (e.g., effect sizes, confidence intervals) that are typically reported in psychological science. 1.2 Strategies for Accessing and Using this OER There are a number of ways you can access this resource. You may wish to try several strategies and then select which works best for you. I demonstrate these in the screencast that accompanies this chapter. Simply follow along in the .html formatted document that is available on via GitHug Pages, and then open a fresh .rmd file of your own, copying (or retyping) the script and running it Locate the original documents at the GitHub repository . You can open them to simply take note of the behind the scenes script copy/download individual documents that are of interest to you fork a copy of the entire project to your own GitHub site and further download it (in its entirety) to your personal workspace. The GitHub Desktop app makes this easy! Listen to the accompanying lectures (I think sound best when the speed is 1.75). The lectures are being recorded in Panopto and should include the closed captioning. Provide feedback to me! If you fork a copy to your own GitHub repository, you can open up an editing tool and mark up the document with your edits, start a discussion by leaving comments/questions, and then sending them back to me by committing and saving. I get an e-mail notiying me of this action. I can then review (accepting or rejecting) them and, if a discussion is appropriate, reply back to you. 1.3 If You are New to R R can be oveRwhelming. Jumping right into advanced statistics might not be the easiest way to start. However, in these chapters, I provide complete code for every step of the process, starting with uploading the data. To help explain what R script is doing, I sometimes write it in the chapter text; sometimes leave hastagged-comments in the chunks; and, particularly in the accompanying screencasted lectures, try to take time to narrate what the R script is doing. Ive found that, somewhere on the internet, theres almost always a solution to what Im trying to do. I am frequently stuck and stumped and have spent hours searching the internet for even the tiniest of things. When you watch my videos, you may notice that in my R studio, there is a scRiptuRe file. I takes notes on the solutions and scripts here  using keywords that are meaningful to me so that when I need to repeat the task, I can hopefully search my own prior solutions and find a fix or a hint. 1.3.1 Base R The base program is free and is available here: https://www.r-project.org/ Because R is already on my machine (and because the instructions are sufficient), I will not walk through the instllation, but I will point out a few things. Follow the instructions for your operating system (Mac, Windows, Linux) The cran (I think cranium) is the Comprehensive R Archive Network. In order for R to run on your computer, you have to choose a location. Because proximity is somewhat related to processing speed, select one that is geographically close to you. You will see the results of this download on your desktop (or elsewhere if you chose to not have it appear there) but you wont ever use R through this platform. 1.3.2 R Studio R Studio is the desktop application I work in R. Its a separate download. Choose the free, desktop, option that is appropriate for your operating system: https://www.rstudio.com/products/RStudio/ Upper right window: Includes several tabs; we frequently monitor the Environment: it lists the objects that are available to you (e.g., dataframes) Lower right window: has a number of helpful tabs. Files: Displays the file structure in your computers environment. Make it a practice to (a) organize your work in small folders and (b) navigating to that small folder that is holding your project when you are working on it. Packages: Lists the packages that have been installed. If you navigate to it, you can see if it is on. You can also access information about the package (e.g., available functions, examples of script used with the package) in this menu. This information opens in the Help window. Viewer and Plots are helpful, later, when we can simultaneously look at our output and still work on our script. Primary window R Studio runs in the background(in the console). Very occasionally, I can find useful troubleshooting information here. More commonly, I open my R Markdown document so that it takes the whole screen and I work directly, right here. R Markdown is the way that many analysts write script, conduct analyses, and even write up results. These are saved as .rmd files. In R Studio, open an R Markdown document through File/New File/R Markdown Specify the details of your document (title, author, desired ouput) In a separate step, SAVE this document (File/Save] into a NEW FILE FOLDER that will contain anything else you need for your project (e.g., the data). Packages are at the heart of working in R. Installing and activating packages require writing script. 1.3.3 R Hygiene Many initial problems in R can be solved with good R hygiene. Here are some suggestions for basic practices. It can be tempting to skip this. However, in the first few weeks of class, these are the solutions I am presenting to my students. 1.3.3.1 Everything is documented in the .rmd file Although others do it differently, everything is in my .rmd file. That is, for uploading data and opening packages I write the code in my .rmd file. Why? Because when I read about what I did hours or years later, I have a permanent record of very critical things like (a) where my data is located, (b) what version I was using, and (c) what package was associated with the functions. 1.3.3.2 File organization File organization is a critical key to this: Create a project file folder. Put the data file in it. Open an R Markdown file. Save it in the same file folder. When your data and .rmd files are in the same folder (not your desktop, but a shared folder), they can be connected. 1.3.3.3 Chunks The R Markdown document is an incredible tool for integrating text, tables, and analyses. This entire OER is written in R Markdown. A central feature of this is chunks. The easiest way to insert a chunk is to use the INSERT/R command at the top of this editor box. You can also insert a chunk with the keyboard shortcut: CTRL/ALT/i Chunks start and end with with those three tic marks and will show up in a shaded box, like this: #hashtags let me write comments to remind myself what I did #here I am simply demonstrating arithmetic (but I would normally be running code) 2021 - 1966 ## [1] 55 Each chunk must open and close. If one or more of your tic marks get deleted, your chunk wont be read as such and your script will not run. The only thing in the chunks should be script for running R; you can hashtag-out script so it wont run. Although unnecessary, you can add a brief title for the chunk in the opening row, after the r. These create something of a table of contents of all the chunks  making it easier to find what you did. You can access them in the Chunks tab at the bottom left of R Studio. If you wish to knit a document, you cannot have identical chunk titles. You can put almost anything you want in the space outside of tics. Syntax for simple formatting in the text areas (e.g,. using italics, making headings, bold, etc.) is found here: https://rmarkdown.rstudio.com/authoring_basics.html 1.3.3.4 Packages As scientist-practitioners (and not coders), we will rely on packages to do our work for us. At first you may feel overwhelmed about the large number of packages that are available. Soon, though, you will become accustomed to the ones most applicable to our work (e.g., psych, tidyverse, lavaan, apaTables). Researchers treat packages differently. In these lectures, I list all the packages we will use in an opening chunk that asks R to check to see if the package is installed, and if not, installs it. if(!require(psych)){install.packages(&quot;psych&quot;)} ## Loading required package: psych ## Warning: package &#39;psych&#39; was built under R version 4.0.5 To make a package operable, you need to open it through the library. This process must be repeated each time you restart R. I dont open the package (through the library(package_name)) command until it is time to use it. Especially for new users, I think its important to connect the functions with the specific packages. #install.packages (&quot;psych&quot;) library (psych) If you type in your own install.packages code, hashtag it out once its been installed. It is problematic to continue to re-run this code . 1.3.3.5 Knitting An incredible feature of R Markdown is its capacity to knit to HTML, powerpoint, or word. If you access the .rmd files for this OER, you can use annotate or revise them to suit your purposes. If you redistribute them, though, please honor the Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License with a citation. 1.3.4 tRoubleshooting in R maRkdown Hiccups are normal. Here are some ideas that I have found useful in getting unstuck. In an R script, you must have everything in order  Every. Single. Time. All the packages have to be in your library and activated; if you restart R, you need to reload each package. If you open an .rmd file and want a boxplot, you cannot just scroll down to that script. You need to run any prerequisite script (like loading the package, importing data, putting the data in the global environment, etc.) Do you feel lost? clear your global environment (broom) and start at the top of the R script. Frequent, fresh starts are good. Your .rmd file and your data need to be stored in the same file folder. These should be separate for separate projects, no matter how small. Type any warnings you get into a search engine. Odds are, youll get some decent hints in a manner of seconds. Especially at first, these are common errors: The package isnt loaded (if you restarted R, you need to reload your packages) The .rmd file has been saved yet, or isnt saved in the same folder as the data Errors of punctuation or spelling Restart R (its quick  not like restarting your computer) If you receive an error indicating that a function isnt working or recognized, and you have loaded the package, type the name of the package in front of the function with two colons (e.g., psych::describe(df). If multiple packages are loaded with functions that have the same name, R can get confused. 1.3.5 stRategies for success Engage with R, but dont let it overwhelm you. The mechanical is also the conceptual. Especially when it is simpler, do try to retype the script into your own .rmd file and run it. Track down the errors you are making and fix them. If this stresses you out, move to simply copying the code into the .rmd file and running it. If you continue to have errors, you may have violated one of the best practices above (Is the package loaded? Are the data and .rmd files in the same place? Is all the prerequisite script run?). Still overwhelmed? Keep moving forward by downloading a copy of the .rmd file that accompanies any given chapter and just run it along with the lecture. Spend your mental power trying to understand what each piece does. Then select a practice problem that is appropriate for your next level of growth. Copy script that works elsewhere and replace it with your datafile, variables, etc. The leaRning curve is steep, but not impossible. Gladwell(2008) reminds us that it takes about 10,000 hours to get GREAT at something (2,000 to get reasonably competent). Practice. Practice. Practice. Updates to R, R Studio, and the packages are NECESSARY, but can also be problematic. It could very well be that updates cause programs/script to fail (e.g., X has been deprecated for version X.XX). Moreover, this very well could have happened between my distribution of these resources and your attempt to use it. My personal practice is to update R, R Studio, and the packages a week or two before each academic term. Embrace your downward dog. Also, walk away, then come back. 1.3.6 Resources for getting staRted R for Data Science: https://r4ds.had.co.nz/ R Cookbook: http://shop.oreilly.com/product/9780596809164.do R Markdown homepage with tutorials: https://rmarkdown.rstudio.com/index.html R has cheatsheets for everything, heres one for R Markdown: https://www.rstudio.com/wp-content/uploads/2015/02/rmarkdown-cheatsheet.pdf R Markdown Reference guide: https://www.rstudio.com/wp-content/uploads/2015/03/rmarkdown-reference.pdf Using R Markdown for writing reproducible scientific papers: https://libscie.github.io/rmarkdown-workshop/handout.html LaTeX equation editor: https://www.codecogs.com/latex/eqneditor.php References "],["Ready.html", "Chapter 2 Ready_Set_R 2.1 Navigating this Lesson 2.2 downloading and installing R 2.3 best pRactices 2.4 quick demonstRation 2.5 the knitted file 2.6 tRoubleshooting in R maRkdown 2.7 just why are we tRansitioning to R? 2.8 stRategies for success 2.9 Resources for getting staRted", " Chapter 2 Ready_Set_R Screencasted Lecture Link With the goal of creating a common, system-wide approach to using the platorm, this lesson is primarily created for CPY and I/O doctoral students who are entering the stats sequence.I hope it will also be useful for others (including faculty) who are also making the transition to R. 2.1 Navigating this Lesson There is about 45 minutes of lecture. 2.1.1 Learning Objectives Learning objectives from this lecture include the following: Downloading/installing Rs parts and pieces. Using R-Markdown as the interface for running R analyses and saving the script. Recognizing and adopting best practices for R hygiene. Identifying effective strategies for troubleshooting R hiccups. 2.2 downloading and installing R 2.2.1 So many paRts and pieces Before we download, it may be helpful to understand some of Rs many parts and pieces. The base software is free and is available here Because R is already on my machine (and because the instructions are sufficient), I will not walk through the demo, but I will point out a few things. The cran (I think cranium) is the Comprehensive R Archive Network. In order for R to run on your computer, you have to choose a location  and it should be geographically close to you. Follow the instructions for your operating system (Mac, Windows, Linux) You will see the results of this download on your desktop (or elsewhere if you chose to not have it appear there) but you wont ever use R through this platform. R Studio is the way in which we operate R. Its a separate download. Choose the free, desktop, option that is appropriate for your operating system: R Markdown is the way that many analysts write script, conduct analyses, and even write up results. These are saved as .rmd files. In R Studio, open an R Markdown document through File/New File/R Markdown Specify the details of your document (title, author, desired ouput) In a separate step, SAVE this document (File/Save] into a NEW FILE FOLDER that will contain anything else you need for your project (e.g., the data). Packages are at the heart of working in R. Installing and activating packages require writing script. Note If you have an enterprise-owned machine (e.g,. in my specific context, if you are a faculty/staff or have a lab with an SPU-issued laptops) there are complications caused by how documents are stored. You will likely need to consult with your computer and technology support office. 2.2.2 oRienting to R Studio (focusing only on the things we will be using first and most often) Upper right window Environment: lists the objects that are available to you (e.g., dataframes) Lower right window Files: Mimics your computers environment. Make it a practice to (a) organize your work in small folders and (b) navigating to that small folder that is holding your project when you are working on it. Packages: Lists the packages that have been installed. If you navigate to it, you can see if it is on. You can also access information about the package (e.g., available functions, examples of script used with the package) in this menu. This information actually opens in the Help window. Viewer and Plots are helpful, later, when we can simultaneously look at our output and still work on our script. Primary window R Studio runs in the background. Very occasionally, I can find useful troubleshooting information here. More commonly, I open my R Markdown document so that it takes the whole screen and I work directly, right here. 2.3 best pRactices 2.3.1 Setting up the file Create a project file folder. Put the data file in it. Open an R Markdown file. Save it in the same file folder. 2.3.2 Script in chunks and everything else in the inline text sections The only thing in the chunks should be script for running R cide. You can also hashtag-out script so it wont run. You can put almost anything you want in the inline text with simple formatting. Syntax for simple formatting in the text areas (e.g,. using italics, making headings, bold, etc.) is found here: https://rmarkdown.rstudio.com/authoring_basics.html Chunks start and end with with those three little tic marks and will show up in a shaded box. Chunks have three symbols in their upper right. Those controls will DISAPPEAR (if there are ``` )and your script wont run) if those tic marks are missing or showing up in the wrong place. The easiest way to insert a chunk is to use the INSERT/R command at the top of this editor box. You can also insert a chunk with the keyboard shortcut: CTRL/ALT/i 2.3.3 Managing packages Note that I have hashtags in front my install.packages commands. This is because I have already installed them. You can run the script by temporarily removing the hashtag and running each command individually by placing your cursor at the end of the line of code and entering CNTRL/ENTER as a keyboard shortcut. You can run the entire chunk by selecting the green arrow in the upper right of the chunk. You can run all the script prior to any chunk by clicking the middle symbol (grey down arrow) ONCE A PACKAGE HAS BEEN INSTALLED, replace the hashtag. It makes a mess to continue to re-run this code for installing packages (after they have already been installed). To make a package operable, you need to open it through the library. This process must be repeated EACH TIME YOU RESTART R. #install.packages (&quot;foreign&quot;) #install.packages (&quot;psych&quot;) library (psych) It takes awhile to learn which package is used for which task. A complete analysis (e.g., preliminary statistics, primary statistics, creating tables and figures) will require a number of packages. Many researchers like to list them all at in a complete section near the top of an .rmd file. In my lessons, I will include an install-if-needed section at the top that (hopefully) includes all the packages we use. My personal practice is to open the package (using the library(package) command) as I need it. For me this serves two purposes: It helps me remember (and continue to learn) which package is used for which task, and (Possibly) helps prevent packages who share function names to not get confused with each other. Another best practice for avoiding this problem is to name the package with two colons in front of the function (psych::describe) Below is an example of the script that will appear near the beginning of each lesson. When the hashtags are removed, it checks to see if these packages are available to the user. #will install the package if not already installed #if(!require(foreign)){install.packages(&quot;foreign&quot;)} #makes it possible to import data from packages, especially SPSS #if(!require(psych)){install.packages(&quot;psych&quot;)} #psych package is useful for a variety of things we do 2.3.4 Upload the data When conducted properly, the data will appear as an object in the global environment. In the context of this OER, I will be simulating data right in each lesson for use in the lesson. This makes the web-based platform more portable. This means that when working the problems in the chapter we do not (a) write the data to a file and (b) import data from files. Because these are essential skills, I will demonstrate this process here  starting with simulating data. At this point, simulating data is beyond the learning goals I have established for the chapter. I do need to include the code so that we get some data. The data I am simulating is used in the one-way ANOVA lesson. The data is from the Tran and Lee (2014) random clinical trial. In this simulation, I am simply creating an ID number, a condition (High, Low, Control), and a scoree on the dependent variable, Accurate. More information about this study is included in the one-way ANOVA chapter. set.seed(2021) #sets a random seed so that we get the same results each time Accurate &lt;- c(rnorm(30, mean=1.18, sd=0.80), rnorm(30, mean=1.83, sd = 0.58), rnorm(30, mean = 1.76, sd = 0.56))#sample size, M and SD for each group Accurate[Accurate&gt;3]&lt;-3 #set upper bound for DV Accurate[Accurate&lt;0]&lt;-0 #set lower bound for DV ID&lt;-factor(seq(1,90)) #IDs for participants COND&lt;-c(rep(&quot;High&quot;, 30), rep(&quot;Low&quot;, 30), rep(&quot;Control&quot;, 30)) #name factors and identify how many in each group; should be in same order as first row of script Acc_sim30 &lt;-data.frame(ID, COND, Accurate) #groups the 3 variables into a single df: ID#, DV, condition At this point, this data lives only in this .rmd file after the above code is run. Although there are numerous ways to export and import data, I have a preference for two. 2.3.4.1 To and from .csv files The first is to write the data to a .csv file. In your computers environment (outside of R), these files are easily manipulated in Excel. I think of them as being Excel lite because although Excel can operate them, they lack some of the more advanced features of an Excel spreadsheet. In the code below, I identify the R object Acc_sim30 and give it a filename, to_CSV.csv. This filename must have the .csv extension. I also indicate that it should preserve the column names (but ignore row names; since we dont have row names). This file will save in the same folder as wherever you are using this .rmd file. #to write it to an outfile as a .csv write.table(Acc_sim30, file=&quot;to_CSV.csv&quot;, sep=&quot;,&quot;, col.names=TRUE, row.names=FALSE) Importing this object back into the R environment can be accomplished with some simple code. For the sake of demonstration, #to save the df as an .csv (think &quot;Excel lite&quot;) file on your computer; it should save in the same file as the .rmd file you are working with from_CSV &lt;- read.csv (&quot;to_CSV.csv&quot;, header = TRUE) The advantage of working with .csv files is that it is then easy to inspect and manipulate them without R. The disadvantage of .csv files is that each time they are imported they lose any formatting you may have meticulously assigned to them. 2.3.4.2 To and from .rds files While it is easy enough to rerun the code (or copy it from data prep .rmd and paste it into an .rmd you are using for advanced analysis), there is an easier way! This is to save the data as an R object. This preserves all the characteristics of the data. #to save the df as an .rds file on your computer; it should save in the same file as the .rmd file you are working with saveRDS(Acc_sim30, &quot;to_Robject.rds&quot;) This file will save to your computer (and you can send it to colleagues). However, it is not easy to just open it in Excel. To open an .rds file and use it (whether you created it or it is sent to you by a colleague), use the following code: from_rds &lt;- readRDS(&quot;to_Robject.rds&quot;) 2.3.4.3 From SPSS files Your data may come to you in a variety of ways. One of the most common is SPSS. The foreign package is popular for importing SPSS data. Below is code which would import an SPSS file if I had created one. Youll see that this script is hashtagged out because I do not have an SPSS file. #opening an SPSS file requires the foreign package which I opened earlier #from_SPSS &lt;- foreign::read.spss (&quot;SPSSdata.sav&quot;, use.value.labels = TRUE, to.data.frame = TRUE) 2.4 quick demonstRation Lets run some simple descriptives. In the script below, I am using the psych package. Descriptive statistics will appear for all the data in the dataframe and the output will be rounded to three spaces. library(psych) round(psych::describe(Acc_sim30),3) vars n mean sd median trimmed mad min max range skew kurtosis ID* 1 90 45.50 26.12 45.50 45.50 33.36 1 90 89 0.00 -1.24 COND* 2 90 2.00 0.82 2.00 2.00 1.48 1 3 2 0.00 -1.53 Accurate 3 90 1.52 0.68 1.55 1.54 0.70 0 3 3 -0.19 -0.34 se ID* 2.75 COND* 0.09 Accurate 0.07 Because ID is the case ID and COND is the factor (high, low, control), the only variable for which this data is sensible is Accurate. None-the-less, this provides an example of how to apply a packages function to a dataset. As we progress through the text we will learn how to manage the data so that we get the specific output we are seeking. 2.5 the knitted file One of the coolest things about R Markdown is its capacity to knit to HTML, PPT, or WORD. In this OER, I am writing the lessons in R markdown (.rmd files), with the package bookdown as a helper, and knitting the files to the .html format. In prior years, I knitted these documents to .doc formats. There are numerous possibilities! The package papaja is designed to prepare APA manuscripts where the writing, statistics, and references are all accomplished in a single file. This process contributes to replicability and reproducibility. 2.6 tRoubleshooting in R maRkdown In a given set of operations, you must run/execute each piece of code in order: every, single, time. That is, all the packages have to be in your library and activated. If you open an .rmd file, you cannot just scroll down to make a boxplot. You need to run any prerequisite script (like loading files, putting the data in the global environment, etc.) Lost? clear your global environment (broom icon in the upper right) and start over. Fresh starts are good. Your .rmd file and your data need to be stored in the same file folder. These should be separate for separate projects, no matter how small. Type any warnings you get into a search engine. Odds are, youll get some decent hints in a manner of seconds. Especially at first, these are common errors: The package isnt loaded The .rmd file has been saved yet, or isnt saved in the same folder as the data Errors of punctuation or spelling Restart R (its quick  not like restarting your computer) 2.7 just why are we tRansitioning to R? It (or at least it appears to be) is the futuRe. SPSS site (and individual) license are increasingly expensive and limited (e.g,. we need Mplus, AMOS, HLM, or R). As package development for R is exploding, we have tools to do just about anything. Most graduate psychology programs are scientist/practitionerin nature and include training in high end statistics. Yet, many of your employing organizations will not have SPSS. R is a free, universally accessible program, that our graduates can use anywhere. 2.8 stRategies for success Engage with R, but dont let it overwhelm you. The mechanical is also the conceptual. Especially while its simpler, do try to retype the script into your own .rmd file and run it. Track down the errors you are making and fix them. If this stresses you out, move to simply copying the code into the .rmd file and running it. If you continue to have errors, you may have violated one of the best practices above (ask, Is the package activated? Are the data and .rmd files in the same place? Is all the prerequisite script run?). Still overwhelmed? Keep moving forward by (retrieving the original.rmd file from the GitHub repository) opening a copy of the .rmd file and just run it along with the lecture. Spend your mental power trying to understand what each piece does so you can translate it for any homework assignments. My suggestions for practice aspire to be parallel to the lecture with no sneaky trix. Copy script that works elsewhere and replace it with your datafile, variables, etc. The leaRning curve is steep, but not impossible. Gladwell (2008) reminds us that it takes about 10,000 hours to get GREAT at something (2,000 to get reasonably competent). Practice. Practice. Practice. Updates to R, R Studio, and the packages are NECESSARY, but can also be problematic. It could very well be that updates cause programs/script to fail (e.g., X has been deprecated for version X.XX). Moreover, this very well could have happened between our distribution of the lecture and your attempt to use it days later. My practice is to update R, R Studio, and my packages about two weeks prior to the start of each academic term. Embrace your downward dog. Also, walk away, go for a bicycle ride, then come back. 2.9 Resources for getting staRted R for Data Science: https://r4ds.had.co.nz/ R Cookbook: http://shop.oreilly.com/product/9780596809164.do R Markdown homepage with tutorials: https://rmarkdown.rstudio.com/index.html R has cheatsheets for everything, heres the one for R Markdown: https://www.rstudio.com/wp-content/uploads/2015/02/rmarkdown-cheatsheet.pdf R Markdown Reference guide: https://www.rstudio.com/wp-content/uploads/2015/03/rmarkdown-reference.pdf Using R Markdown for writing reproducible scientific papers: https://libscie.github.io/rmarkdown-workshop/handout.html Script for all of Fields text: https://studysites.uk.sagepub.com/dsur/study/scriptfi.htm LaTeX equation editor: https://www.codecogs.com/latex/eqneditor.php References "],["waRmups.html", "Chapter 3 waRming up 3.1 Navigating this Lesson 3.2 Results 3.3 Practice Problems", " Chapter 3 waRming up Screencasted Lecture Link The beginning of any data analysis means familiarizing yourself with the data, that is, its distributional characteristics as well as its relations. 3.1 Navigating this Lesson There is about 30 minutes of lecture. The R markdown file used to create this lecture as well as all of the figures are available at the OERs GitHub site. 3.1.1 Learning Objectives Learning objectives from this lecture include the following: Produce descriptive statistics (means, standard deviations, skew, kurtosis), and correlation matrix, with the psych package Produce plots of data Interpret skew, kurtosis, correlations Create an APA Style table and results section that includes means, standard deviations, and correlations 3.1.2 Planning for Practice This is designed as a get (back) into it assignment. You will essentially work through this very same lecture, using the same dataframe  just a different set of continuous variables. 3.1.3 Readings &amp; Resources In preparing this chapter, I drew heavily from the following resource(s). Other resources are cited (when possible, linked) in the text with complete citations in the reference list. Revelle, W. (2020). An introduction to the psych package: Part I: data entry and data description. Revelle is the author/creator of the psych package. His tutorial provides both technical and interpretive information. Read pages 1-17. Lui, P. P. (2020). Racial Microaggression, Overt Discrimination, and Distress: (In)Direct Associations With Psychological Adjustment. The Counseling Psychologist, 32. We continue with the worked example from Lui; using simulated data for the lecture and homework assignment. We will use simulated data from Lui (2020) for simple data screening. Controlling for overt discrimination and neuroticism, Lui examined the degree to which racial microaggression contributed to negative affect, alcohol consumption, and drinking problems in African American, Asian American, and Latinx American college students (N = 713). Using the means, standard deviations, correlation matrix, and group sizes (n) I simulated the data. While the process of simulation is beyond the learning goals of this lesson (you can skip that part), I include it here so that it is easy to work the rest of the script. set.seed(210807)#sets the random seed so that we consistently get the same results #for practice, you could change (or remove) the random seed and try to interpret the results (they should be quite similar) #There are probe more efficient ways to simulate data. #Given the information available in the manuscript, my approach was to first create the datasets for each of the racial ethnic groups that were provided and then binding them together. #First, the data for the students who identified as Asian American Asian_mu &lt;- c(1.52, 1.72, 2.69, 1.71, 2.14, 2.35, 2.42) Asian_stddev &lt;- c(2.52, 2.04, 0.47, 0.70, 0.80, 2.41, 3.36) Asian_corMat &lt;- matrix(c(1.00, 0.69, 0.19, 0.28, 0.32, 0.08, 0.23, 0.69, 1.00, 0.20, 0.29, 0.33, 0.13, 0.25, 0.19, 0.20, 1.00, 0.50, 0.50, -0.04, 0.09, 0.28, 0.29, 0.50, 1.00, 0.76, 0.04, 0.18, 0.32, 0.33, 0.50, 0.76, 1.00, 0.10, 0.21, 0.08, 0.13, -0.04, 0.04, 0.10, 1.00, 0.42, 0.23, 0.25, 0.09, 0.18, 0.21, 0.42, 1.00), ncol=7) Asian_covMat &lt;- Asian_stddev %*% t(Asian_stddev) * Asian_corMat library(MASS) Warning: package &#39;MASS&#39; was built under R version 4.0.5 Attaching package: &#39;MASS&#39; The following object is masked from &#39;package:dplyr&#39;: select Asian_dat &lt;- mvrnorm(n = 398, mu = Asian_mu, Sigma = Asian_covMat, empirical = TRUE) Asian_df &lt;- as.data.frame(Asian_dat) library(tidyverse) Asian_df &lt;- rename(Asian_df, OvDisc = V1, mAggr = V2, Neuro = V3, nAff = V4, psyDist = V5, Alcohol = V6, drProb = V7) Asian_df$RacEth &lt;- &quot;Asian&quot; #Second, the data for the students who identified as Black/African American Black_mu &lt;- c(4.45, 3.84, 2.60, 1.84, 2.10, 2.81, 2.14) Black_stddev &lt;- c(4.22, 3.08, 0.89, 0.80, 0.81, 2.49, 3.24) Black_corMat &lt;- matrix(c( 1.00, 0.81, 0.17, 0.15, 0.09, 0.05, -0.16, 0.81, 1.00, 0.17, 0.21, 0.11, 0.09, -0.01, 0.17, 0.17, 1.00, 0.59, 0.54, 0.05, 0.24, 0.15, 0.21, 0.59, 1.00, 0.72, 0.12, 0.22, 0.09, 0.11, 0.54, 0.72, 1.00, 0.21, 0.40, 0.05, 0.09, 0.05, 0.12, 0.21, 1.00, 0.65, -0.16,-0.01, 0.24, 0.22, 0.40, 0.65, 1.00), ncol = 7) Black_covMat &lt;- Black_stddev %*% t(Black_stddev) * Black_corMat Black_dat &lt;- mvrnorm(n = 133, mu = Black_mu, Sigma = Black_covMat, empirical = TRUE) Black_df &lt;- as.data.frame(Black_dat) Black_df &lt;- rename(Black_df, OvDisc = V1, mAggr = V2, Neuro = V3, nAff = V4, psyDist = V5, Alcohol = V6, drProb = V7) Black_df$RacEth &lt;- &quot;Black&quot; #Third, the data for the students who identified as Latinx American Latinx_mu &lt;- c(1.56, 2.34, 2.69, 1.81, 2.17, 3.47, 2.69) Latinx_stddev &lt;- c(2.46, 2.49, 0.86, 0.71, 0.78, 2.59, 3.76) Latinx_corMat &lt;- matrix(c( 1.00, 0.78, 0.27, 0.36, 0.42, -0.06, 0.08, 0.78, 1.00, 0.33, 0.26, 0.35, -0.11, -0.02, 0.27, 0.33, 1.00, 0.62, 0.64, -0.04, 0.15, 0.36, 0.26, 0.62, 1.00, 0.81, -0.08, 0.17, 0.42, 0.35, 0.64, 0.81, 1.00, -0.06, 0.15, -0.06,-0.11, -0.04, -0.08, -0.06, 1.00, 0.60, 0.08, -0.02, 0.15, 0.17, 0.15, 0.60, 1.00), ncol = 7) Latinx_covMat &lt;- Latinx_stddev %*% t(Latinx_stddev) * Latinx_corMat Latinx_dat &lt;- mvrnorm(n = 182, mu = Latinx_mu, Sigma = Latinx_covMat, empirical = TRUE) Latinx_df &lt;- as.data.frame(Latinx_dat) Latinx_df &lt;- rename(Latinx_df, OvDisc = V1, mAggr = V2, Neuro = V3, nAff = V4, psyDist = V5, Alcohol = V6, drProb = V7) Latinx_df$RacEth &lt;- &quot;Latinx&quot; Lui_sim_df &lt;-bind_rows (Asian_df, Black_df, Latinx_df) If you have simulated the data, you can continue using the the Lui_sim_df object that we created. In your own research you may wish to save data as a file. Although I will hashtag it out (making it inoperable until the hashtags are removed), here is code to save the simulated data both .csv (think Excel lite) and .rds (it retains all the properties we assigned to it in R) files and then bring/import them back into R. #write the simulated data as a .csv #write.table(Lui_sim_df, file=&quot;Lui_CSV.csv&quot;, sep=&quot;,&quot;, col.names=TRUE, row.names=FALSE) #bring back the simulated dat from a .csv file #df &lt;- read.csv (&quot;Lui_CSV.csv&quot;, header = TRUE) #to save the df as an .rds (think &quot;R object&quot;) file on your computer; it should save in the same file as the .rmd file you are working with #saveRDS(Lui_sim_df, &quot;Lui_RDS.rds&quot;) #bring back the simulated dat from an .rds file #df &lt;- readRDS(&quot;Lui_RDS.rds&quot;) You may have noticed a couple of things in each of these operations First, I named the data object that global environment df (i.e., dataframe). It is a common (but not required) practice for researchers to simply use df or dat for their R script, no matter the type or source of the data. This practice has advantages (makes reusing code easy) and disadvantages (its easy to get confused about what data is what). Second, if you run the code, the updating replaces the prior code. While this is irrelevant today (we are saving the same data in different ways), it points out the importance of creating a sensible and systematic order of operations in your .rmd files and then knowing where you are in the process. Because the data is simulated, I can simply use the data I created in the simulation, however, I will go ahead and use the convention of renaming it, df. df &lt;- Lui_sim_df Is this R session reading our variables correctly? Check it with the structure command. str (df) &#39;data.frame&#39;: 713 obs. of 8 variables: $ OvDisc : num 1.45 4.9 0.45 2.85 2.09 ... $ mAggr : num 0.682 4.383 0.225 2.235 1.977 ... $ Neuro : num 3.11 3.69 3.5 2.68 2.08 ... $ nAff : num 2.32 2.59 2.27 2.28 2.01 ... $ psyDist: num 1.83 3.41 2.75 2.11 3.12 ... $ Alcohol: num 3.125 4.388 0.999 0.137 -0.575 ... $ drProb : num 2.499 -3.23 3.035 -0.858 -1.467 ... $ RacEth : chr &quot;Asian&quot; &quot;Asian&quot; &quot;Asian&quot; &quot;Asian&quot; ... Looking back at the Lui (2020) article we can presume the following variables (variable/variable name) to have the following structure (scaling/R scaling): Discrimination/OvDis:interval/num theoretically someone could experience no discrimination, but it would still score as 1.0 if the scale is averaged and the respondent marked 1 (never or not at all) for all the options. Microaggressions/mAggr: interval/num theoretically someone could experience no microaggressions, but it would still score as 1.0 if the scale is averaged and the respondent marked 1 (never; and then not at all [stressful]) for all the options. Neuroticism/Neuro: interval/num Negative affect/nAff:interval/num Psychological distress/psyDist:interval/num Hazardous alcohol use/Alcohol: interval/num Drinking problems/drProb: interval/num Race Ethnicity/RacEth: nominal/chr Everything is fine except Race Ethnicity which needs to be a factor. Lets change it and check again. At this point I need to use the tidyverse package so that I can mutate() the RacEth variable to be a factor. # A .csv file is uninformed -- it just holds data (and R guesses what it is); respecifying the type of variable will likely need to be completed each time the file is used. library(tidyverse) df &lt;- df %&gt;% mutate( RacEth = as.factor(RacEth)) #checking the structure of the data str(df) &#39;data.frame&#39;: 713 obs. of 8 variables: $ OvDisc : num 1.45 4.9 0.45 2.85 2.09 ... $ mAggr : num 0.682 4.383 0.225 2.235 1.977 ... $ Neuro : num 3.11 3.69 3.5 2.68 2.08 ... $ nAff : num 2.32 2.59 2.27 2.28 2.01 ... $ psyDist: num 1.83 3.41 2.75 2.11 3.12 ... $ Alcohol: num 3.125 4.388 0.999 0.137 -0.575 ... $ drProb : num 2.499 -3.23 3.035 -0.858 -1.467 ... $ RacEth : Factor w/ 3 levels &quot;Asian&quot;,&quot;Black&quot;,..: 1 1 1 1 1 1 1 1 1 1 ... Manipulating the dat is an important skill. I can use the select() function to obtain certain variable. I want to select three variables that are continuous and then disaggregate them by race/ethnicity. library(tidyverse) #This was struggling to run because there are multiple packages open with a &quot;select&quot; function #I solved the problem by indicating that I wanted to use the select function from the &quot;dplyr&quot; package #dplyr is part of the tidyverse package tiny_df &lt;- df%&gt;% dplyr::select(mAggr, nAff, psyDist) We can start with simple descriptives. Revelles (2020) psych package was made specifically for much of the type of work we do. library(psych) describe(tiny_df) vars n mean sd median trimmed mad min max range skew kurtosis mAggr 1 713 2.27 2.51 2.17 2.19 2.42 -4.42 10.42 14.85 0.35 0.32 nAff 2 713 1.76 0.72 1.75 1.76 0.71 -0.56 4.19 4.75 0.01 0.15 psyDist 3 713 2.14 0.80 2.11 2.13 0.79 -0.10 4.73 4.84 0.12 0.08 se mAggr 0.09 nAff 0.03 psyDist 0.03 One of the easiest way to get counts of categorical variables is to use them in the psych packages describeBy() function. In the script below, I am asking for descriptives of the entire df, but disaggregated by RacEth. describeBy (df, df$RacEth, mat=TRUE) item group1 vars n mean sd median trimmed mad OvDisc1 1 Asian 1 398 1.52 2.52 1.671877 1.536984 2.5083543 OvDisc2 2 Black 1 133 4.45 4.22 4.101902 4.459685 3.7911955 OvDisc3 3 Latinx 1 182 1.56 2.46 1.622515 1.592317 2.1839022 mAggr1 4 Asian 2 398 1.72 2.04 1.629094 1.712366 2.0479218 mAggr2 5 Black 2 133 3.84 3.08 3.560519 3.844107 2.8031478 mAggr3 6 Latinx 2 182 2.34 2.49 2.366613 2.343589 2.5832009 Neuro1 7 Asian 3 398 2.69 0.47 2.664432 2.688114 0.4913231 Neuro2 8 Black 3 133 2.60 0.89 2.691292 2.616584 0.8381441 Neuro3 9 Latinx 3 182 2.69 0.86 2.719094 2.697182 0.8817373 nAff1 10 Asian 4 398 1.71 0.70 1.724998 1.709749 0.6808739 nAff2 11 Black 4 133 1.84 0.80 1.779947 1.837073 0.8226934 nAff3 12 Latinx 4 182 1.81 0.71 1.799092 1.811002 0.6725811 psyDist1 13 Asian 5 398 2.14 0.80 2.117524 2.136579 0.8011511 psyDist2 14 Black 5 133 2.10 0.81 2.001099 2.084985 0.8371713 psyDist3 15 Latinx 5 182 2.17 0.78 2.142896 2.159840 0.7579508 Alcohol1 16 Asian 6 398 2.35 2.41 2.299663 2.324671 2.4620921 Alcohol2 17 Black 6 133 2.81 2.49 2.760749 2.822602 2.1592551 Alcohol3 18 Latinx 6 182 3.47 2.59 3.353811 3.479536 2.7406457 drProb1 19 Asian 7 398 2.42 3.36 2.409912 2.418404 3.5040063 drProb2 20 Black 7 133 2.14 3.24 2.254354 2.158361 3.5583579 drProb3 21 Latinx 7 182 2.69 3.76 2.528477 2.658522 3.5799107 RacEth*1 22 Asian 8 398 1.00 0.00 1.000000 1.000000 0.0000000 RacEth*2 23 Black 8 133 2.00 0.00 2.000000 2.000000 0.0000000 RacEth*3 24 Latinx 8 182 3.00 0.00 3.000000 3.000000 0.0000000 min max range skew kurtosis se OvDisc1 -5.83902804 8.421599 14.260627 -0.078189651 -0.13080404 0.12631619 OvDisc2 -10.31638613 16.388836 26.705222 -0.125879064 0.57600168 0.36592041 OvDisc3 -6.57126805 7.625248 14.196516 -0.142542665 0.35807531 0.18234733 mAggr1 -3.63155800 8.682565 12.314123 0.091336696 -0.18297749 0.10225596 mAggr2 -4.09305401 10.424468 14.517522 -0.017884129 -0.31873937 0.26706987 mAggr3 -4.42196168 9.237781 13.659743 -0.025230120 -0.03996127 0.18457108 Neuro1 1.45287258 3.988193 2.535321 0.070330835 -0.35836361 0.02355897 Neuro2 -0.28319065 4.738701 5.021892 -0.259085030 0.08300312 0.07717279 Neuro3 0.01432133 5.263965 5.249644 -0.102274817 0.54931296 0.06374744 nAff1 -0.29889116 3.613959 3.912850 -0.039998756 -0.12116003 0.03508783 nAff2 -0.29056580 4.042763 4.333328 0.034482279 -0.25309219 0.06936880 nAff3 -0.56044730 4.186554 4.747001 0.002283094 0.92439559 0.05262870 psyDist1 -0.08596817 4.514520 4.600488 0.071251904 -0.12020053 0.04010038 psyDist2 -0.10126503 4.402106 4.503371 0.151367949 -0.01156587 0.07023591 psyDist3 -0.07657607 4.734104 4.810680 0.205329737 0.54580657 0.05781745 Alcohol1 -3.07666900 9.204501 12.281170 0.143207169 -0.37141988 0.12080238 Alcohol2 -5.55081496 9.730453 15.281268 -0.169805727 0.69454596 0.21591038 Alcohol3 -3.64260294 10.765453 14.408056 -0.014397205 -0.23205639 0.19198357 drProb1 -7.97853725 11.688962 19.667499 -0.006618251 -0.07367148 0.16842158 drProb2 -5.64470469 9.939996 15.584701 -0.063644276 -0.38485480 0.28094363 drProb3 -7.28910040 10.657865 17.946965 0.028417092 -0.36766984 0.27870974 RacEth*1 1.00000000 1.000000 0.000000 NaN NaN 0.00000000 RacEth*2 2.00000000 2.000000 0.000000 NaN NaN 0.00000000 RacEth*3 3.00000000 3.000000 0.000000 NaN NaN 0.00000000 3.1.4 Determining Skew and Kurtosis To understand whether our data are normally distributed, we can look at skew and kurtosis. The skew and kurtosis indices in the psych package are reported as z scores. Regarding skew, values &gt; 3.0 are generally considered severely skewed. Regarding kurtosis, severely kurtotic is argued anywhere &gt; 8 to 20 (Kline, 2016). 3.1.5 SPLOM SPLOM (scatterplot matrix) is a graphical tool that uses multiple scatterplots to deterine the correlation (if any) between a set of variables. These plots are organized into a matrix, making it easy to see them all at once. In the psych package, the pairs.panels() produces these. On diagonal we see: histogram of each variable superimposed with a normal curve Below diagonal we see: xy scatter plot (not useful for our categorical RacEth row) the lowess locally fit regression line the X axis represents the column variable; the Y axis, the row variable Above diagonal we see: Pearson correlation # the pch = &quot;.&quot; command produces a cleaner graphic and is especially useful when there are lots of variables pairs.panels(tiny_df, pch=&quot;.&quot;) What do we observe? All 3 variables look normally distributed relationship between mAggr with nAff and psyDist is quite comparable relationship between nAff and psyDist is very strong are these correlations significant? Revelle (2020) is not a fan of the associated p value, but we can get it several ways (hang tight). Writing up an APA style results section usually involves some sort of table. A super helpful package for doing this is apaTables. Really cool is the instructional article (pubbed in a peer reviewed journal) that also talks about the contributions of tools like this contributing to the reproducibility of science by reducing errors and, if the R script/data are shared how the evaluation process is standardized and therefore reproducible (Stanley &amp; Spence, 2018). library(apaTables) # unlike the psych package, this function removes any categorical variables Table1_Cor &lt;- apa.cor.table(tiny_df, filename = &quot;Table1_Cor.doc&quot;, table.number = 1, show.conf.interval = FALSE, landscape = TRUE) The ability to suppress reporting of reporting confidence intervals has been deprecated in this version. The function argument show.conf.interval will be removed in a later version. #swap in this command to see it in the console print(Table1_Cor) Table 1 Means, standard deviations, and correlations with confidence intervals Variable M SD 1 2 1. mAggr 2.27 2.51 2. nAff 1.76 0.72 .27** [.20, .33] 3. psyDist 2.14 0.80 .26** .76** [.19, .32] [.73, .79] Note. M and SD are used to represent mean and standard deviation, respectively. Values in square brackets indicate the 95% confidence interval. The confidence interval is a plausible range of population correlations that could have caused the sample correlation (Cumming, 2014). * indicates p &lt; .05. ** indicates p &lt; .01. 3.2 Results Our sample included Asian American (n = 398), Latinx (n = 182), and Black (n = 133) participants. Visual inspection of the three variables of interest (negative affect, psychological distress, microaggressions) combined with formal evaluation of skewness and kurtosis suggested univariate normality. Correlations between negative affect and psychological distress were quite strong; correlations with each of these variables and microaggressions were moderate. Results are presented in Table 1. 3.3 Practice Problems The three exercises described below are designed to meet you where you are and allow you to challenge your skills depending on your comfort with statistics and R. Regardless which you choose, you should: Create a tiny_df from a larger df Calculateand interpret descriptives for the continuously scaled variables Create the SPLOM (pairs.panels) of the continuously scaled variables Use the apaTables package to make an APA style table with means, standard deviations, and correlations Write up a mini-results section (APA style) 3.3.1 Problem #1: Change the Random Seed If this topic feels a bit overwhelming, simply change the random seed in the data simulation (at the very top), then rework the lesson exactly as written. This should provide minor changes to the data (maybe in the second or third decimal point), but the results will likely be very similar. Element Points Poss Points Earned 1. Create the tiny_df 3 2. Descriptives of tiny_df 3 3. SPLOM/pairs.panels 3 4. apaTables matrix 3 5. Mini-results 5 6. Explanation/discussion with a grader 5 **Totals 22 3.3.2 Problem #2: Use the simulated data from the Lui (2020) study. However, select three continuous variables (2 must be different from mine) and then conduct the analyses. Element Points Poss Points Earned 1. Create the tiny_df 3 2. Descriptives of tiny_df 3 3. SPLOM/pairs.panels 3 4. apaTables matrix 3 5. Mini-results 5 6. Explanation/discussion with a grader 5 **Totals 22 3.3.3 Problem #3: Use data for which you have permission and access. This could be IRB approved data you have collected or from your lab; data you simulate from a published article; data from an open science repository; or data from other chapters in this OER. Element Points Poss Points Earned 1. Create the tiny_df 3 2. Descriptives of tiny_df 3 3. SPLOM/pairs.panels 3 4. apaTables matrix 3 5. Mini-results 5 6. Explanation/discussion with a grader 5 **Totals 22 References "],["oneway.html", "Chapter 4 ONE-WAY ANOVA 4.1 Navigating this Lesson 4.2 Workflow for One-Way ANOVA 4.3 Research Vignette 4.4 Working the Problem 4.5 Understanding ANOVA with Hand Calculations 4.6 Working the One-Way ANOVA in R 4.7 Power Analysis 4.8 APA Style Results 4.9 Practice Problems 4.10 Bonus Reel:", " Chapter 4 ONE-WAY ANOVA Screencasted Lecture Link One-way ANOVA allows the researcher to analyze mean differences between two or more groups on a between-subjects factor. For the one-way ANOVA, each case (i.e., individual, participant) must have scores on two variables: a factor and a dependent variable. The factor must be categorical in nature, dividing the cases into two or more groups or levels. These levels could be ordered (e.g., placebo, low dose, high dose) or unordered (e.g., cognitive-behavioral, existential, psychodynamic). The dependent variable must be assessed on a quantitative, continuous dimension. The ANOVA F test evaluates whether population means on the dependent variable differ across the levels of the factor. One-way ANOVA can be used in experimental, quasi-experimental, and field studies. As we work through the chapter we will examine some some of the requirements (assumptions) of the statistic in greater detail. 4.1 Navigating this Lesson There is about 2 hours and 20 minutes of lecture. If you work through the materials with me plan for another two hours of study. 4.1.1 Learning Objectives Learning objectives from this lecture include the following: Evaluate the statistical assumptions associated with one-way analysis of variance (ANOVA). Describe the relationship between model/between-subjects and residual/within-subjects variance. Narrate the steps in conducting a formal one-way ANOVA beginning with testing the statistical assumptions through writing up an APA style results section. Conduct a one-way ANOVA in R (including calculation of effect sizes and follow-up to the omnibus). Conduct a power analysis for a one-way ANOVA. Produce an APA style results section. 4.1.2 Planning for Practice The research vignette for this chapter (Tran &amp; Lee, 2014) has two variables where the authors have conducted one-way ANOVAs. I will demonstrate one (Accurate) in this lecture; the second is suggested as homework. For additional practice, you may wish to create a different set of simulated data by disabling the code that sets the random seed in the data simulation. This will allow reworking the same problem, but with slightly different results. As part of the practice you should: test the statistical assumptions conduct a one-way ANOVA, including omnibus test and effect size follow-up (pairwise, planned comparisons, polynomial trends) write a results section to include a figure and tables 4.1.3 Readings &amp; Resources In preparing this chapter, I drew heavily from the following resource(s) that are freely available on the internet. Other resources are cited (when possible, linked) in the text with complete citations in the reference list. Chapter 14, Comparing Several Means (one-Way ANOVA) From Danielle Navarros Learning Statistics with R Chapter 5.5.2, Simulating data for one-way between subjects design with 3 levels from Matthew J. C. Crumps Programming for Psychologists: Data Creation and Analysis 4.1.4 Packages If hashtags are removed, the script below will (a) check to see if the following packages are installed on your computer and, if not (b) install them. #will install the package if not already installed #if(!require(gplots)){install.packages(&quot;gplots&quot;)} #easy plotting for simple ANOVA #if(!require(tidyverse)){install.packages(&quot;tidyverse&quot;)} #creating new variables and other handy functions #if(!require(psych)){install.packages(&quot;psych&quot;)} #for descriptive statistics and writing them as csv files #if(!require(lsr)){install.packages(&quot;lsr&quot;)} #produces effect sizes #if(!require(pwr)){install.packages(&quot;pwr&quot;)} #estimating sample sizes and power analysis #if(!require(apaTAbles)){install.packages(&quot;apaTables&quot;)} #produces an APA style table for ANOVAs and other models 4.2 Workflow for One-Way ANOVA The following is a proposed workflow for conducting a one-way ANOVA. An image of a workflow for the one-way ANOVA Prepare (upload) data. Explore data graphs descriptive statistics Checking distributional assumptions assessing normality via skew, kurtosis, Shapiro Wilks checking for violation of homogeneity of variance assumption with Levenes test; if we violate this we can use Welchs omnibus ANOVA Compute the omnibus ANOVA (remember to use Welchs if Levenes p &lt; .05) Compute post-hoc comparisons, planned contrasts, or polynomial trends Managing Type I error Sample size/power analysis (which you should think about first  but in the context of teaching ANOVA, its more pedagogically sensible, here) 4.3 Research Vignette The exceptionalizing racial stereotype is microaggression framed as interpersonally complimentary, but perpetuates negative stereotypical views of a racial/ethnic group. We are using data that is simulated from a random clinical trial (RCT) conducted by Tran and Lee (2014). The one-way ANOVA examples we are simulating represent the post-only design which investigated three levels of the exceptionalizing stereotype in a sample of Asian American participants. This experimental design involved a confederate (posing as a peer) whose parting comment fell into the low racial loading, high racial loading, or control conditions. COND Assignment Manipulation Post-test Observation Low racial loading condition (n = 22) Random Yes: Nice talking to you. You speak English well. Accurate High racial loading (n = 23) Random Yes: Nice talking to you. You speak English well for an Asian. Accurate Control (n = 23) Random No: Nice talking to you. Accurate Tran and Lee (2014) reported results from two ANOVAs and 4 ANCOVAs, using a pre-test as a covariate. A preprint of their article is available here. Accurate is the DV we will be exploring in class. Participants rated how accurate they believed their partners impression of them was (0 = very inaccurate, 3 = very accurate). moreTalk is the DV assigned for homework. Participants rated how much longer they would continue the interaction with their partner compared to their interactions in general (-2 = much less than average, 0 = average, 2 = much more than average). 4.3.1 Data Simulation Here, we simulate the ANOVA data from the Tran and Lee (2014) RCT. The data can be simulated for each, one-way ANOVA, separately, but because there is no correlation matrix (showing the relations between all the variables), it is impossible to recreate a single dataset with all the relations. Simulating data for a one-way ANOVA requires the sample size (rnorm), mean (mean), and standard deviation (sd) for each of the groups (Crump, 2018). In creating this simulation, I used the data from Table 1 in the Tran and Lee (2014) article. Having worked the problem several times, I made one change. The group sizes in the original study were 23, 22, and 23. To ensure that we would have statistically significant results in our worked example, I increased the sample sizes to 30 for each group. In this way we have a perfectly balanced (equal cell sizes) design. set.seed(2021) #sets a random seed so that we get the same results each time Accurate &lt;- c(rnorm(30, mean=1.18, sd=0.80), rnorm(30, mean=1.83, sd = 0.58), rnorm(30, mean = 1.76, sd = 0.56))#sample size, M and SD for each group Accurate[Accurate&gt;3]&lt;-3 #set upper bound for DV Accurate[Accurate&lt;0]&lt;-0 #set lower bound for DV ID&lt;-factor(seq(1,90)) #IDs for participants COND&lt;-c(rep(&quot;High&quot;, 30), rep(&quot;Low&quot;, 30), rep(&quot;Control&quot;, 30)) #name factors and identify how many in each group; should be in same order as first row of script Acc_sim30 &lt;-data.frame(ID, COND, Accurate) #groups the 3 variables into a single df: ID#, DV, condition #to write it to an outfile write.table(Acc_sim30, file=&quot;newAcc30.csv&quot;, sep=&quot;,&quot;, col.names=TRUE, row.names=FALSE) 4.4 Working the Problem 4.4.1 Preparing and Uploading Data If you are working this problem with me, you may use either the object we created from the simulation (i.e., Acc_sim30) or the upload and use the copy we saved to a .csv file. Because much of our data will come from an outside file, I will use that downloaded-and-reuploaded copy. #for a .csv file accSIM30 &lt;- read.csv (&quot;Acc_sim30_df.csv&quot;, head = TRUE, sep = &quot;,&quot;) # head=TRUE yields column headings; # sep = &quot;,&quot; tells R that we are using a .csv file (comma separated values) Examining the data is important for several reasons. First, we can begin to inspect for any anomalies. Second, if we are confused about what statistic we wish to apply, understanding the characteristics of the data can provide clues. In R markdown we can look at the data by clicking on it, and examine its structure with the str() function. Lets do both. str(accSIM30) &#39;data.frame&#39;: 90 obs. of 3 variables: $ ID : int 1 2 3 4 5 6 7 8 9 10 ... $ COND : chr &quot;High&quot; &quot;High&quot; &quot;High&quot; &quot;High&quot; ... $ Accurate: num 1.86 1.75 2.59 1.38 2.03 ... If we look at this simple dataset, we see that we see that COND is a grouping variable) with 3 levels (high, low, control) it is presently in chr (character) format, it needs to be changed to be a factor. Accurate is a continuous variable it is presently in num (numerical) format, this is satisfactory. There are many ways to convert variables to factors; heres one of the simplest. accSIM30$COND &lt;- factor(accSIM30$COND) Lets recheck the structure str(accSIM30) &#39;data.frame&#39;: 90 obs. of 3 variables: $ ID : int 1 2 3 4 5 6 7 8 9 10 ... $ COND : Factor w/ 3 levels &quot;Control&quot;,&quot;High&quot;,..: 2 2 2 2 2 2 2 2 2 2 ... $ Accurate: num 1.86 1.75 2.59 1.38 2.03 ... By default, R orders factors alphabetically. This means, analysis will assume that Control (C) is the lowest condition, then High, then Low. Since these have theoretically ordered values, we want them in the order of Control, Low, High. Here is the script to create a an ordered factor. accSIM30$COND &lt;- factor(accSIM30$COND, levels = c(&quot;Control&quot;, &quot;Low&quot;, &quot;High&quot;)) Again, we can check our work. str(accSIM30) &#39;data.frame&#39;: 90 obs. of 3 variables: $ ID : int 1 2 3 4 5 6 7 8 9 10 ... $ COND : Factor w/ 3 levels &quot;Control&quot;,&quot;Low&quot;,..: 3 3 3 3 3 3 3 3 3 3 ... $ Accurate: num 1.86 1.75 2.59 1.38 2.03 ... Now our variables are suitable for analysis. R will always guess the variable format when importing a .csv and, in this case, it will always guess incorrectly. We need to write our script so that we are always checking and updating the structure of variables. 4.4.2 Exploring the Distributional Characteristics Numerically Lets continue data exploration. We will do this several ways so that you will have several tools for such exploration. In this first exploration, I will demonstrate how to grab a quick mean. aggregate (Accurate ~ COND, accSIM30, mean) COND Accurate 1 Control 1.876882 2 Low 2.046506 3 High 1.473640 And now a standard deviation. aggregate (Accurate ~ COND, accSIM30, sd) COND Accurate 1 Control 0.4791969 2 Low 0.5725299 3 High 0.7653157 Before looking at the graphs, we can see that racially loaded high condition has the lowest accuracy score and the largest variability. Lets take a look at the graphs to see this. 4.4.3 Exploring the Distributional Characteristics Graphically The package gplots produces a simple line graph and the script is fairly intuitive. The plotmeans() function plots the means with error bars (95% confidence intervals) around the mean. Regarding the confidence intervals, we can think, How confident are we that the mean is this particular value? Earlier we noted that the high racial loading condition had the lowest mean and the widest variability. Is this apparent from the graph? library(gplots) Attaching package: &#39;gplots&#39; The following object is masked from &#39;package:stats&#39;: lowess plotmeans (formula = Accurate ~ COND, #plots DV by IV data = accSIM30, #identifies the data frame xlab = &quot;Racial Loading Condition&quot;, #let&#39;s us specify a label for the x-axis ylab = &quot;Accuracy of Confederate&#39;s Impression&quot;, #let&#39;s us specify a label for the y-axis n.label = TRUE #we can even specify the sample size for each level of the group ) #this code could be more elegantly written in one row #plotmeans (formula = Accurate ~ COND, data = accSIM30, xlab = &quot;Racial Loading Condition&quot;, ylab = &quot;Accuracy of Confederate&#39;s Impression&quot;, n.label = TRUE) Boxplots, with the boxplot2() function provide another view of our data. In boxplots the center value is the median. The box spans the interquartile range and ranges from the 25th to the 75th percentile. The whiskers cover 1.5 times the interquartile range. When this does not capture the entire range, outliers are represented with dots. boxplot2 (Accurate ~ COND, data = accSIM30, xlab = &quot;Racial Loading Condition&quot;, ylab = &quot;Accuracy of Confederate&#39;s Impression&quot;, n.label = TRUE) From both the boxplot and the linegraph with error bars, we can see that participants in the low racial loading condition have the highest accuracy ratings. This is followed by the control and then high racial loading conditions. Are these differences statistically significant? This is why we need the one-way ANOVA. 4.5 Understanding ANOVA with Hand Calculations ANOVA was developed by Sir Ronald Fisher in the early 20th century. The name is a bit of a misnomer  rather than analyzing variances, we are investigating differences in means (but the formula does take variances into considerationstay tuned). ANOVA falls squarely within the tradition of null hypothesis significance testing (NHST). As such, a formal, traditional, ANOVA begins with statements of the null and alternate hypotheses. Note. Tran and Lee (2014) do not list such. In our example, we would hypothesize that the population means (i.e., Asian or Asian American individuals in the U.S.) are equal: \\[H_{O}: \\mu _{1} = \\mu _{2} = \\mu _{3}\\] There are an number of ways that the \\(H_{O}\\) could be false. Here are a few: \\[H_{a1}: \\mu _{1} \\neq \\mu _{2} \\neq \\mu _{3}\\] \\[H_{a2}: \\mu _{1} = \\mu _{2} &gt; \\mu _{3}\\] \\[H_{a3}: \\mu _{1} &gt; \\mu _{2} &gt; \\mu _{3}\\] The bottom line is that if we have a statistically significant omnibus ANOVA (i.e., the test of the overall significance of the model) and the \\(H_{O}\\) is false, somewhere between the three levels of the grouping factor, the means are statistically significantly different from each other. In evaluating the differences between means, one-way ANOVA compares: systematic variance to unsystematic variance explained to unexplained variation experimental effect to the individual differences model variance to residual variance between group variance to within group variance The ratio of these variances is the F-ratio. Navarro (2020a) offers a set of useful figures to compare between- and within-group variation. Figure 4.1: Graphical illustration of between groups variation Figure 4.2: Graphical illustration of within groups variation Perhaps an oversimplification, but to the degree that between-group variance (i.e,. model variance) is greater than within-group variance (i.e., residual variance) there may be support to suggest that there are statistically significant differences between groups. Lets examine how variance is partitioned by hand-calculating sums of squares total, model, and residual. 4.5.1 Sums of Squares Total Sums of squares total represents the total amount of variance within our data. Examining the formula(s; there are several ways to consider it) can help us gain a conceptual understanding of this. In this first version of the formula we can see that the grand (or overall) mean is subtracted from each individual score, squared, and then summed. This makes sense: sums of squares, total. \\[SS_{T}= \\sum (x_{i}-\\bar{x}_{grand})^{2}\\] In the next version of the formula we see that the sums of square total is the addition of the sums of squares model and residual. \\[SS_{T}= SS_{M} + SS_{R}\\] Between and within are another way to understand model and residual. This is reflected in the next formula. \\[SS_{T}= SS_{B} + SS_{W}\\] Finally, think of the sums of squares total as the grand variance multiplied by the overall degrees of freedom (N - 1). \\[SS_{T}= s_{grand}^{2}(n-1)\\] Lets take a moment to hand-calculate \\(SS_{T}\\). Not to worry! Well get R to do the math for us. This is just a conceptual tour of sums of squares total. Our grand (i.e., overall) mean is mean(accSIM30$Accurate) [1] 1.799009 Subtracting the grand mean from each Accurate score yields a mean difference. library(tidyverse) accSIM30 &lt;- accSIM30 %&gt;% mutate(m_dev = Accurate-mean(Accurate)) Pop quiz: Whats the sum of our new m_dev variable? Lets check. mean(accSIM30$m_dev) [1] -0.00000000000000005421372 R uses scientific e notation. The proper value is one where the base number (before the e) is multiplied by 10, raised to the power shown: \\(5.421372 * 10^{17}\\) Another way to think of it is to move the decimal 17 places to the left. In any case, this number is essentially zero. Back to the point of sums of squares total, the sum of deviations around the grand mean will always be zero. To make them useful, we must square them: accSIM30 &lt;- accSIM30 %&gt;% mutate(m_devSQ = m_dev^2) If we sum the squared mean deviations we will obtain the total variance (sums of squares total): sum(accSIM30$m_devSQ) [1] 38.34623 This value, the sum of squared deviations around the grand mean, is our \\(SS_T\\); the associated degrees of freedom is \\(N - 1\\); in our case this is 90-1 = 89. In one-way ANOVA, we divide \\(SS_T\\) into model/between sums of squares and residual/within sums of squares. The model generally represents the notion that the means are different than each other. We want the variation between our means to be greater than the variation within each of the groups from which our means are calculated. 4.5.2 Sums of Squares for the Model (or Between) We just determined that the total amount of variation within the data is 38.35 units. From this we can estimate how much of this variation our model can explain. \\(SS_M\\) tells us how much of the total variation can be explained by the fact that different data points come from different groups. We see this reflected in the formula below, where the grand mean is subtracted from each group mean this value is squared and multiplied by the number of cases in each group these values are summed \\[SS_{M}= \\sum n_{k}(\\bar{x}_{k}-\\bar{x}_{grand})^{2}\\] To calculate this, we start with the grand mean. mean(accSIM30$Accurate) [1] 1.799009 We also estimate the group means. aggregate (Accurate ~ COND, accSIM30, mean) COND Accurate 1 Control 1.876882 2 Low 2.046506 3 High 1.473640 This formula occurs in three chunks, representing the control, low, and high racial loading conditions. In each of the chunks we have the \\(n\\), group mean, and grand mean. 30*(1.876 - 1.799)^2 + 30*(2.046 - 1.799)^2 + 30*(1.474 - 1.799)^2 [1] 5.17689 This value, \\(SS_M\\) is the value accounted for by the model  the proportion of variance accounted for by the grouping variable/factor, COND. Degrees of freedom for \\(SS_M\\) is always one less than the number of elements (e.g., groups) used in its calculation (\\(k-1\\)). Because we have three groups, our degrees of freedom for the model is 2. 4.5.3 Sums of Squares Residual (or within) To recap, we know there are 38.35 units of variation to be explained in our data. Our model explains 5.18 of these units. Sums of squares residual tells us how much of the variation cannot be explained by the model. This value is influenced by extraneous factors; some will refer to it as noise. Looking at the formula can assist us in with a conceptual formula. In \\(SS_R\\) we subtract the group mean from each individual member of the group and then square it. \\[SS_{R}= \\sum(x_{ik}-\\bar{x}_{k})^{^{2}}\\] Heres another approach to calculating\\(SS_R\\). In this one the variance for each group is multiplied by its respective degrees of freedom, then summed. \\[SS_{R}= s_{group1}^{2}(n-1) + s_{group2}^{2}(n-1) + s_{group3}^{2}(n-1))\\] Again, the formula is in three chunks  but this time the calculations are within-group. We need the variance (the standard deviation squared) for the calculation. aggregate (Accurate ~ COND, accSIM30, sd) COND Accurate 1 Control 0.4791969 2 Low 0.5725299 3 High 0.7653157 A quick tangent  this calculation demonstrates the relationship between standard deviation and variance. Variance is the standard deviation, squared. #just showing you that the variance (next) is the standard deviation, squared .4791969^2 [1] 0.2296297 aggregate (Accurate ~ COND, accSIM30, var) COND Accurate 1 Control 0.2296297 2 Low 0.3277905 3 High 0.5857082 We will use the second formula to calculate \\(SS_R\\). For each of the groups, we multiply the variance by the respective degrees of freedom for the group (n - 1). .2296*(30-1) + .3278*(30-1) + .5857*(30-1) [1] 33.1499 The value for our \\(SS_R\\) is 33.15. Degrees of freedom for the residual is \\(df_T - df_M\\). \\(df_T\\) was \\(N-1\\): 90 - 1 = 89 \\(df_M\\) was \\(k - 1\\): 3 - 1 = 2 Therefore, \\(df_R\\): is 89 - 2 = 87 4.5.4 Relationship between \\(SS_T\\), \\(SS_M\\), and \\(SS_R\\). In case its not clear: \\(SS_T = SS_M + SS_R\\) 33.15 + 5.18 [1] 38.33 The difference (38.35 vs. 38.33) is likely due to rounding error. Earlier estimates had multiple decimal points. 4.5.5 Mean Squares Model &amp; Residual Our estimates of variation were sums of squares and are influenced by the number of scores that were summed. We can correct this bias by calculating their average  the mean squares or \\(MS\\). We will use these in the calculation of the \\(F\\) statistic  the statistic that tests if there are significant differences between groups. Like the constellation of sums of squares, we calculate mean squares for the model (\\(MS_M\\)) and residual(\\(MS_R\\)). Each formula simply divides the corresponding sums of squares by their respective degrees of freedom. \\[MS_M = \\frac{SS_{M}}{df{_{M}}}\\] Regarding the calculation of our model mean squares: \\(SS_M\\) was 5.17689 \\(df_M\\) was 2 Therefore, \\(MS_M=\\)is: # mean squares for the model 5.17689/2 [1] 2.588445 \\[MS_R = \\frac{SS_{R}}{df{_{R}}}\\] Regarding the calculation of our model residual squares: \\(SS_R\\) was 33.1499 \\(df_R\\) was 87 Therefore, \\(MS_R\\) is: # mean squares for the residual 33.1499 / 87 [1] 0.3810333 4.5.6 Calculating the F-Statistic The F-statistic (or F-ratio) is the assesses the ratio (as its name implies) of variation explained by the model to unsystematic factors (i.e., the residual). Earlier we used between and within language. Especially when we think of our example  where the model is composed of three groups, we can think of the F statistic as assessing the ratio of variation explained by between-subjects differences to within-subjects differences. Navarros (Navarro, 2020b) figures (earlier in the chapter) illustrate this well. \\[F = \\frac{MS_{M}}{MS_{R}}\\] Regarding the calculation of our F-ratio: \\(MS_M\\) was 2.588445 \\(MS_R\\) was 0.3810333 Therefore, \\(F\\) is: 2.588445 / 0.3810333 [1] 6.793225 4.5.7 Source Table Games These last few calculations are actually less complicated than this presentation makes them seem. To better understand the relation between sums of squares, degrees of freedom, and mean squares, lets play a couple of rounds of Source Table Games! Rules of the game: In each case, mean squares are determined by dividing the sums of squares by its respective degrees of freedom. The F statistic is determined by dividing \\(MS_M\\) by \\(MS_R\\) Knowing only two of the values, challenge yourself to complete the rest of the table. Before looking at the answers (below), try to the fill in the blanks based in the table based on what we have learned so far. Game Total (df, N - 1) Model (df, k -1) Residual (df, \\(df_T - df_M\\)) SS 38.346(89) 5.17689(2) ______ MS NA ______ ______ \\(F = MS_{M}/MS_{R}\\) = ______ DONT PEEK! TRY TO DO THE CALCULATIONS IN THE SOURCE TABLE GAMES EXERCISE BEFORE LOOKING AT THESE ANSWERS Answers Total (df, N - 1) Model (df, k -1) Residual (df, \\(df_T - df_M\\)) SS 38.346(89) 5.17689(2) 33.1499(87) MS NA 2.5885 0.38103 \\(F = MS_{M}/MS_{R}\\) = 6.973 To determine whether or not it is statistically significant, we can check a table of critical values (Zach, 2019) for the F test. Our example has 2 (numerator) and 87 (denominator) degrees of freedom. Rolling down to the table where \\(\\alpha = .05\\), we can see that any \\(F\\) value &gt; 3.11 (a value somewhere between 3.07 and 3.15) will be statistically significant. Our \\(F\\) = 6.79, so we have clearly exceeded the threshold. This is our omnibus F test. Significance at this level lets us know that there is at least 1 statistically significant difference between our control, low, and high racially loaded conditions. While it is important to follow-up to see where these significant differences lie, we will not do these by hand. Rather, lets rework the problem in R. 4.6 Working the One-Way ANOVA in R Lets rework the problem in R. We start at the top of the flowchart, evaluating the statistical assumptions. An image of the workflow for one-way ANOVA, showing that we are at the beginning: evaluating the potential violation of the assumptions. 4.6.1 Evaluating the Statistical Assumptions All statistical tests have some assumptions about the data. The one-way ANOVA has four assumptions: The dependent variable is normally distributed for each of the populations as defined by the different levels of the factor. We will examine this by evaluating skew and kurtosis visually inspecting the distribution conduct a Shapiro Wilks test examine a QQ plot The variances of the dependent variable are the same for all populations. This is often termed the homogeneity of variance assumption. We will examine this with Levenes Test The cases represent random samples from the populations and scores on the test variable are independent of each other. That is, comparing related cases (e.g., parent/child, manager/employee, time1/time2) must be completed by another statistic such as repeated measures ANOVA or dyadic data analysis. Independence in observations is a research design issue. ANOVA not robust to violating this assumption. When observations are correlated/dependent there is a dramatic increase in Type I error. The dependent variable is measured on an interval scale. This is also a research design issue. If the dependent variable is categorical, another statistic (such as logistic regression) should be chosen. 4.6.1.1 Is the dependent variable normally distributed across levels of the factor? From the psych package, the describe() function can be used to provide descriptives of continuously scaled variables (i.e., variables measured on the interval or ratio scale). In this simple example, we can specify the specific continuous, DV. library(psych) #we name the function #in parentheses we list the object that is the dataframe #the $ sign precedes the specific variable for which we want the information describe(accSIM30$Accurate) vars n mean sd median trimmed mad min max range skew kurtosis se X1 1 90 1.8 0.66 1.8 1.83 0.56 0.15 3 2.85 -0.33 -0.07 0.07 If we want descriptives for each level of the grouping variable (factor), we can use the describeBy() function of the psych package. The order of entry within the script is the DV followed by the grouping variable (IV). #It is unnecessary to create an object, but an object allows you to do cool stuff, like write it to a .csv file and use that as a basis for APA style tables #In this script we can think &quot;Accurate by COND&quot; meaning that the descriptives for accuracy will be grouped by COND which is a categorical variable #mat = TRUE means we will get the output in matrix (table) form #digits = 3 means output will be rounded to 3 decimal places #data = accSIM30 is a different (I think easier) way to identify the object that holds the dataframe des.mat &lt;- describeBy (Accurate ~ COND, mat=TRUE, digits=3, data=accSIM30) #describeBy(accSIM30$Accurate, accSIM30$COND, mat=TRUE) des.mat #let&#39;s you see the matrix object item group1 vars n mean sd median trimmed mad min max range X11 1 Control 1 30 1.877 0.479 1.811 1.872 0.460 0.854 2.721 1.867 X12 2 Low 1 30 2.047 0.573 2.049 2.053 0.534 0.922 3.000 2.078 X13 3 High 1 30 1.474 0.765 1.498 1.469 0.646 0.153 2.935 2.782 skew kurtosis se X11 0.134 -0.756 0.087 X12 0.017 -0.872 0.105 X13 -0.034 -0.789 0.140 write.csv (des.mat, file=&quot;Table1.csv&quot;) #optional to write it to a .csv file Skew and kurtosis speaks to normal distributions. The skew and kurtosis indices in the psych package are reported as z scores. Regarding skew, values greater than 3.0 are generally considered severely skewed. Regarding kurtosis, severely kurtotic is argued to be anywhere greater 8 to 20 (Kline, 2016). The Shapiro-Wilks test evaluates the hypothesis that the distribution of the data as a whole deviates from a comparable normal distribution. If the test is non-significant (p &gt;.05) it tells us that the distribution of the sample is not significantly different from a normal distribution. If, however, the test is significant (p &lt; .05) then the distribution in question is significantly different from a normal distribution. shapiro.test(accSIM30$Accurate) Shapiro-Wilk normality test data: accSIM30$Accurate W = 0.97413, p-value = 0.06931 The \\(p\\) value (\\(p\\) = 0.069) is just barely above .05. This tells us that the Accurate variable does not deviate from a statistically significant distribution. There are limitations to the Shapiro-Wilks test. As the dataset being evaluated gets larger, the Shapiro-Wilks test becomes more sensitive to small deviations; this leads to a greater probability of rejecting the null hypothesis (null hypothesis being the values come from a normal distribution). Green and Salkind (2014) advised that ANOVA is relatively robust to violations of normality if there are at least 15 cases per cell and the design is reasonably balanced (i.e., equal cell sizes). So, is our dependent variable normally distributed at each of the levels of the factor? In statistics we generally provide cautious and tentative answers. My interpretation is that there is not evidence to suggest that we have violated this assumption. 4.6.1.2 Are the variances of the dependent variable similar across the levels of the grouping factor? The Levenes test evaluates the ANOVA assumption that variances of the dependent variable for each level of the independent variable are similarly distributed. We want this to be non-significant (\\(p\\) &gt; .05). If violated, we need to use an ANOVA test that is robust to the violation of the homogeneity of variance (e.g., Welchs oneway). In R, Levenes test is found in the car package. library(car) Loading required package: carData Attaching package: &#39;car&#39; The following object is masked from &#39;package:dplyr&#39;: recode The following object is masked from &#39;package:purrr&#39;: some The following object is masked from &#39;package:psych&#39;: logit #Our set up is similar: Accurate by condition, followed by the object that holds the dataframe, followed by the instruction to center the analysis around the mean leveneTest (Accurate ~ COND, accSIM30, center=mean) Levene&#39;s Test for Homogeneity of Variance (center = mean) Df F value Pr(&gt;F) group 2 2.274 0.109 87 We write the result of the Levenes as \\(F\\)(2,87) = 2.274, \\(p\\) = 0.109 Because \\(p\\) &gt; .05, we know that the result is nonsignficant  that the variances of the three groups are not statistically significantly different than each other. IF the results had been statistically significantly different, we would have needed to use a Welchs \\(F\\) or robust version of ANOVA. 4.6.1.3 Summarizing results from the analysis of assumptions It is common for an APA style results section to begin with a review of the evaluation of the statistical assumptions. As we have just finished these analyses, I will document what we have learned so far: A one-way analysis of variance was conducted to evaluate the relationship between degree of racial loading of an exceptionalizing microaggression and the perceived accuracy of a research confederates impression of the Asian or Asian American participant. The independent variable, COND, included three levels: control/none, low, and high levels of racial loading. Results of Levenes homogeneity of variance test indicated no violation of the homogeneity of variance assumption (\\(F\\)[(2,87] = 2.274, \\(p\\) = 0.109 ). Similarly, results of the Shapiro Wilks test indicated no violation of the normality assumption W = 0.97413, p = 0.069. Now we can move onto computing the omnibus ANOVA. Omnibus is the term applied to the first F test that evaluates if all groups have the same mean (CHEN et al., 2018). If this test is not significance there is no evidence in the data to reject the null; that is, there is no evidence to suggest that group means are different. If it is significant  and there are 3 or more groups  follow-up testing will be needed to determine where the differences lie. 4.6.2 Computing the Omnibus ANOVA Having met all the assumptions, we are now ready to calculate the omnibus \\(F\\) test. An image of the workflow for one-way ANOVA, showing that we are at the stage of computing the omnibus ANOVA. ANOVA is a special case of the general linear model (regression is a not so special case of the general linear model), therefore we use the linear model function, aov() to run the analysis. In the code below, we predict Accuracy from COND (3 levels: control, low, high). By assigning the results of the aov() function to an object (accBYcond) we can then use that object (think model) in other functions to get details about our analysis. #the script looks familiar, &quot;Accurate by Condition&quot; accBYcond &lt;- aov(Accurate ~ COND, data = accSIM30) #DV ~ IV I say, &quot;DV by IV&quot; summary (accBYcond) #ANOVA output Df Sum Sq Mean Sq F value Pr(&gt;F) COND 2 5.20 2.598 6.817 0.00178 ** Residuals 87 33.15 0.381 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Inserting the aov() object (accBYcond) into the summary command produces the ANOVA Source Table that we manually created above. The values we see map onto those we calculated by hand. Our \\(SS_M\\) (5.20) plus \\(SS_R\\) (33.15) add to the \\(SS_T\\) (38.35) we calculated by hand. Dividing the two sums of squares by their respective degrees of freedom produces the sums of means squared. Then, dividing the \\(MS_M\\) (COND) by \\(MS_R\\) (2.598/-.381) provides the F value. By using a table of F critical values, we already knew that our F value exceeded the value in the table of critical values. Here we see that p = 0.00178. The F string for an APA style results section should be written like this: F (2, 87) = 6.817, p = 0.002. The object we created with the aov() function is capable of producing much information. Applying the names() function to the object can give us a list of values within it. names(accBYcond) [1] &quot;coefficients&quot; &quot;residuals&quot; &quot;effects&quot; &quot;rank&quot; [5] &quot;fitted.values&quot; &quot;assign&quot; &quot;qr&quot; &quot;df.residual&quot; [9] &quot;contrasts&quot; &quot;xlevels&quot; &quot;call&quot; &quot;terms&quot; [13] &quot;model&quot; summary() is one of the most commonly used function applied to aov() objects, but its not the only one. Lets try some other options. model.tables (accBYcond, &quot;means&quot;) Tables of means Grand mean 1.799009 COND COND Control Low High 1.8769 2.0465 1.4736 Lets graph some of the data. plot(accBYcond) The aov() command has a quickplot feature. The first of the four plots fits the residuals. We already know from Levenes that we did not violate the homogeneity of variance test. With its straight line, this plot shows an equal spread across the three groups. When the dots of the Q-Q plot map onto the diagonal, we have some indication of normality of the residuals (we want residuals to be normally distributed). 4.6.2.1 Effect size for the one-way ANOVA Eta squared is one of the most commonly used measures of effect. It refers to the proportion of variability in the dependent variable/outcome that can be explained in terms of the independent variable/predictor. Traditional interpretive values are similar to the Pearsons r: 0 = no relationship .02 = small .13 = medium .26 = large 1 = a perfect (one-to-one) correspondence A useful summary of effect sizes, guide to interpreting their magnitudes, and common usage can be found here (Watson, 2020). The formula for \\(\\eta^2\\) is straightforward. If we think back to our hand-calculations of all the sums of squares, we can clearly see that this is the proportion of variance that is accounted for by the model. \\[\\eta ^{2}=\\frac{SS_{M}}{SS_{T}}\\] Hand calculation, then, is straightforward.: 5.20 / (5.20 + 33.15) [1] 0.1355932 The lsr package includes an eta-squared calculator. To use it, we simply insert the model/object we created with the aov() function to lsrs etaSquared() function. library(lsr) etaSquared(accBYcond) eta.sq eta.sq.part COND 0.1354894 0.1354894 Notice that there are two effect sizes. We described eta-squared. Partial eta-squared is the effect size reported in SPSS. Theres a long history of debate about which to use. In certain circumstances (especially in more complicated analyses), partial-eta squared can be a bit more generous (i.e., larger than \\(\\eta^2\\)). Thus, many prefer the reporting of \\(\\eta^2\\). In our case, we see no difference between the two values. Differences begin to appear in datasets that are more complicated, such as when sample sizes across the levels of a factor differ. 4.6.2.2 Summarizing results from the omnibus ANOVA Presenting the APA style results of the omnibus test is very straightforward: Results indicated a significant effect of COND on accuracy perception $ F(2, 87) = 6.817, p = 0.002, ^2 = .14$. 4.6.3 Follow-up to the Omnibus F The F-test associated with the one-way ANOVA is the omnibus  giving the result for the overall test. Looking at the workflow for the one-way ANOVA we see that if we had had we had a non-significant \\(F\\), we would have stopped our analysis. However, if the omnibus \\(F\\) is significant, we know that there is at least one pair of cells where there is a statistically significant difference. We have several ways (each with its own strengths/limitations) to figure out where these differences lie. We have several options for following up; a very common option is to conduct post-hoc, pairwise comparisons. An image of the workflow for one-way ANOVA, showing that we are at the stage of following a statistically significant omnibus F test and are now conducting posthoc comparisons. 4.6.3.1 OPTION 1: Post-hoc, pairwise, comparisons Post-hoc, pairwise comparisons are: used for exploratory work when no firm hypotheses were articulated a priori, used to compare the means of all combinations of pairs of an experimental condition, less powerful than planned comparisons b/c strict criterion for significance must be used. Helpful information about how to conduct post-hoc pairwise comparisons in R can be found at the UCLA Institute for Digital Research and Education site (How Can I Do Post-Hoc Pairwise Comparisons in R? R FAQ, n.d.). pairwise.t.test(accSIM30$Accurate, accSIM30$COND, p.adj = &quot;none&quot;) Pairwise comparisons using t tests with pooled SD data: accSIM30$Accurate and accSIM30$COND Control Low Low 0.29016 - High 0.01321 0.00054 P value adjustment method: none #can swap &quot;bonf&quot; or &quot;holm&quot; for p.adj The output only provides the \\(p\\) values associated with the mean differences in each of the conditions. We see that \\(p &lt; .05\\) when control is compared to low. An APA style reporting results of these typically involves referencing the means (often reported in a table of means and standard deviations) or mean differences (hand calculated) with their p values. Should we be concerned about Type I error?\" Recall that Type I error is the concern about false positives  that we would incorrectly reject a true null hypothesis (that we would say that there is a statistically significant difference when there is not one). This concern increases when we have a large number of pairwise comparisons. Green and Salkind (2014) review three options for managing Type I error. Traditional Bonferroni: Adjusts the p value upward by multiplying it (the raw p values) by the number of comparisons being completed. This holds the total Type I error rate across these tests to \\(\\alpha\\) (usually .05). The traditional Bonferroni is simple and therefore attractive, but when p values hover around .05, it can be too restrictive. Holms Sequential Bonferroni: Well describe this in more detail later. Briefly, it allows us to rank order the comparisons by their p value (smallest to largest). We determine the significance of each p value sequentially. LSD method: Permitted when there are only three pairwise comparisons among three groups, researchers can leave the p values as they are. Since the Tran and Lee (2014) research vignette is one of those circumstances, I not make adjustments for Type I error. I would name claim the LSD and cite Green and Salkind [-green_using_2014] as justification for that decision. There is, though, an even more powerful approach 4.6.3.2 OPTION 2: Planned contrasts Another option is to evaluate planned comparisons. Planned comparisons are theory-driven comparisons constructed prior to data collection, based on the idea of partitioning the variance created by the overall effect of group differences into gradually smaller portions of variance. more powerful than post-hoc tests. Planned contrasts involve further considerations regarding the partitioning of variance. There will always be k-1 contrasts. Each contrast must involve only two chunks of variance. Orthogonal contrasts are even more sophisticated. Essential to conducting an orthogonal contrast is the requirement that if a group is singled out in one comparison it should be excluded from subsequent contrasts. The typical, orthogonal scenario with three groups has only two contrasts: Control versus Low and High (because control was excluded, it should not reappear) Low versus High Underlying the aov() program is the linear model. We could have used it for the omnibus ANOVA, but it has clunky output. We use it now to retrieve some contrast information. The code below is a planned comparison that uses the coding in the database to compare the lowest coded group (Control was 1, Low was 2, High was 3) to the other two groups. summary.lm(accBYcond) Call: aov(formula = Accurate ~ COND, data = accSIM30) Residuals: Min 1Q Median 3Q Max -1.32063 -0.36424 -0.01944 0.33736 1.46146 Coefficients: Estimate Std. Error t value Pr(&gt;|t|) (Intercept) 1.8769 0.1127 16.654 &lt;0.0000000000000002 *** CONDLow 0.1696 0.1594 1.064 0.2902 CONDHigh -0.4032 0.1594 -2.530 0.0132 * --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Residual standard error: 0.6173 on 87 degrees of freedom Multiple R-squared: 0.1355, Adjusted R-squared: 0.1156 F-statistic: 6.817 on 2 and 87 DF, p-value: 0.001776 From the above, regression output, we see that there was not a statistically significant difference between COND_Control COND_Low (p = 0.2902). There was a statistically significant difference between COND_High and COND_Low. Note that these tests are conducted as t tests. Why? We are comparing only two groups and can use the t. distribution. Its quite possible we want something different. Step 1: Specify our contrasts Specifying the contrasts means you know their order within the factor Early in the data preparation, we created an ordered factor with Control, Low, High as the order. We want orthogonal contrasts, this means there will be k - 1 contrasts; we will have 2 once we single out a condition for comparison, we cannot use it again. In contrast1 we compare the Control condition to the combined Low and High conditions. In contrast2 we discard the Control condition (it was already singled out) and we compare the Low and High conditions. This is sensible because we likely hypothesize that any degree of racially loaded stereotypes may have a deleterious outcome, so we first compare Control to the two conditions with any degree of racial loading. Subsequently, we compare the Low and High levels of the factor. Step 2: Bind them together and check the output to ensure that weve mapped them correctly. #Contrast1 compares Control against the combined effects of Low and High. contrast1 &lt;- c(-2,1,1) #Contrast2 excludes Control; compares Low to High. contrast2 &lt;- c(0,-1,1) #binding the contrasts together contrasts(accSIM30$COND)&lt;-cbind(contrast1, contrast2) accSIM30$COND [1] High High High High High High High High High [10] High High High High High High High High High [19] High High High High High High High High High [28] High High High Low Low Low Low Low Low [37] Low Low Low Low Low Low Low Low Low [46] Low Low Low Low Low Low Low Low Low [55] Low Low Low Low Low Low Control Control Control [64] Control Control Control Control Control Control Control Control Control [73] Control Control Control Control Control Control Control Control Control [82] Control Control Control Control Control Control Control Control Control attr(,&quot;contrasts&quot;) contrast1 contrast2 Control -2 0 Low 1 -1 High 1 1 Levels: Control Low High Thinking back to the hand-calculations and contrast mapping, the table of weights that R just produced confirms that Contrast 1 compares the Control condition against the levels with any racial loading. Contrast 2 compares the Low and High loadings. Step 3: Create a new aov() model #create a new object, the ANOVA looks the same, but it will now consider the contrasts accPlanned &lt;- aov(Accurate ~ COND, data = accSIM30) summary.lm(accPlanned) Call: aov(formula = Accurate ~ COND, data = accSIM30) Residuals: Min 1Q Median 3Q Max -1.32063 -0.36424 -0.01944 0.33736 1.46146 Coefficients: Estimate Std. Error t value Pr(&gt;|t|) (Intercept) 1.79901 0.06507 27.648 &lt; 0.0000000000000002 *** CONDcontrast1 -0.03894 0.04601 -0.846 0.399727 CONDcontrast2 -0.28643 0.07969 -3.594 0.000539 *** --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Residual standard error: 0.6173 on 87 degrees of freedom Multiple R-squared: 0.1355, Adjusted R-squared: 0.1156 F-statistic: 6.817 on 2 and 87 DF, p-value: 0.001776 contrasts(accSIM30$COND)&lt;-cbind(c(-2,1,1), c(0,-1,1)) These planned contrasts show that when the control condition is compared to the combined low and high racial loading conditions, there is not a statistically significant difference, t(87) = -0.846, p = 0.400. However, when the low and high racial loading conditions are compared, there is a statistically significant difference, t(87) = -3.594, p = 0.001. 4.6.3.3 Trend (polynomial) analysis An image of the workflow for one-way ANOVA, showing that we are at the following up to a significant omnibus F by assessing for a polynomial trend Polynomial contrasts let us see if there is a linear (or curvilinear) pattern to the data. To detect a trend, the data must be coded in an ascending order and it needs to be a sensible, theoretically defensible, comparison. Our data has a theoretically ordered effect (control, low racially loaded condition, high racially loaded condition). Recall that we created an ordered factor when we imported the data. In a polynomial analysis, the statistical analysis looks across the ordered means to see if they fit a linear or curvilinear shape that is one less than the number of levels. Our factor has three levels, therefore the polynomial contrast can check for a linear shape (.L) or a quadratic (one change in direction) shape (.Q). If we had four levels, the contr.poly could check for cubic change (two changes in direction). Conventionally, when more than one trend is significant, we intepret the most complex one (i.e., quadratic over linear). contrasts(accSIM30$COND)&lt;-contr.poly(3) accTrend&lt;-aov(Accurate ~ COND, data = accSIM30) summary.lm(accTrend) Call: aov(formula = Accurate ~ COND, data = accSIM30) Residuals: Min 1Q Median 3Q Max -1.32063 -0.36424 -0.01944 0.33736 1.46146 Coefficients: Estimate Std. Error t value Pr(&gt;|t|) (Intercept) 1.79901 0.06507 27.65 &lt; 0.0000000000000002 *** COND.L -0.28514 0.11270 -2.53 0.01321 * COND.Q -0.30312 0.11270 -2.69 0.00857 ** --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Residual standard error: 0.6173 on 87 degrees of freedom Multiple R-squared: 0.1355, Adjusted R-squared: 0.1156 F-statistic: 6.817 on 2 and 87 DF, p-value: 0.001776 A quick peek back at an early plot shows illustrates the quadratic trend that was supported by the analysis. Results of our polynomial contrast suggested statistically significant results for both linear \\(t(87) = -2.53, p = .013\\) and quadratic \\(t(87) = -2.69, p = .009\\) trends. 4.6.3.4 Which set of follow-up tests do we report? It depends! What best tells the story of your data? Here are some things to consider. If the post-hoc comparisons are robustly statistically significant (and controlling Type I error is not going to change that significance), I think this provides good information and I would learn toward report those. If p values are hovering around 0.05, an orthogonal contrast will offer more power because a k - 1 comparison will be more powerful a priori theory is compelling The polynomial can be a nice addition if there is a linear or quadratic relationship that is sensible or interesting. Although I would report either the post-hoc or planned contrasts, I will sometimes add a polynomial if it clarifies the result (i.e., there is a meaningful linear or curvilinear pattern essential to understanding the data. 4.6.4 What if we Violated the Homogeneity of Variance test? The oneway.test produces Welchs F  a test more robust to violation of the homogeneity of variance assumption. The Welchs approach to attenuating error or erroneous conclusions caused by violations of the homogeneity of variance assumption is to adjust the residual degrees of freedom used to produce the Welchs F-ratio. Another common correction is the Brown and Forsythe F-ratio. At this time I have not located and tried an R package that produces this. oneway.test (Accurate ~ COND, data = accSIM30) One-way analysis of means (not assuming equal variances) data: Accurate and COND F = 5.3691, num df = 2.00, denom df = 56.22, p-value = 0.007346 Note that the denominator df is now 56.22 (not 87) and p value is bigger (it was .00178). With its design intended to avoid making a Type I error, the Welchs F is more conservative. While it doesnt matter in this case, if it were a study where the p value was closer to .05, it could make a difference. These are some of the tradeoffs made in order to have confidence in the results. 4.7 Power Analysis Power analysis allows us to determine the sample size required to detect an effect of a given size with a given degree of confidence. Utilized another way, it allows us to determine the probability of detecting an effect of a given size with a given level of confidence. If the probability is unacceptably low, we may want to revise or stop. A helpful overview of power as well as guidelines for how to use the pwr package can be found at a Quick-R website (Kabacoff, 2017). There are four interrelating elements of power: Sample size, N Effect size, For one-way ANOVAs, Cohen suggests that f values of 0.1, 0.25, and 0.4 represent small, medium, and large effect sizes, respectively. Significance level = P(Type I error), Recall that Type I error is the rejection of a true null hypothesis (a false positive). Stated another way, Type I error is the probability of finding an effect that is not there. power = 1 - P(Type II error), Recall that Type II error is the non-rejection of a false null hypothesis (a false negative). Power is the probability of finding an effect that is there. If we have any three of these values, we can calculate the fourth. In Champelys pwr package, we can conduct a power analysis for a variety of designs, including the balanced one-way ANOVA (i.e., roughly equal cell sizes) design that we worked in this chapter. The pwr.anova.test() has five parameters: k = # groups n = sample size f = effect sizes, where 0.1/small, 0.25/medium, and 0.4/large In the absence from an estimate from our own data, we make a guess about the expected effect size value based on our knowledge of the literature sig.level = p value that you will use power = .80 is the standard value In the script below, we simply add our values. So long as we have four values, the fifth will be calculated for us. library(pwr) pwr.anova.test (k = 3, f = .25, sig.level = .05, power = .80) Balanced one-way analysis of variance power calculation k = 3 n = 52.3966 f = 0.25 sig.level = 0.05 power = 0.8 NOTE: n is number in each group This result suggested that we would need 52 people per group. The effect size from our one-way ANOVA was an \\(\\eta^2 = .13\\). Using an effect size converter such as the one hosted at Psychometrica.de, we can learn that it is equivalent to an f of .386. To use the Psychometrica tool, use the option labeled, Transformation of the effect sizes d, r, f, Odds Ratio, \\(\\eta^2\\), and Common Language Effect Size (CLES). We could actually re-run the power tool see how many fewer people we needed. pwr.anova.test (k = 3, f = .386, sig.level = .05, power = .80) Balanced one-way analysis of variance power calculation k = 3 n = 22.58384 f = 0.386 sig.level = 0.05 power = 0.8 NOTE: n is number in each group This is a little curious. When I initially simulated the data, I used the n values for each group (i.e.,23, 22, 23) reported in the article (Tran &amp; Lee, 2014) and did not obtain a (consistently) statistically significant result; statistical significance wavered based on the random seed value that I used. For the purpose of the chapter, I increased the sample size to be 30 across each group so that the significance was more consistent. This, in itself, is a useful demonstration of sample size at it relates to power. 4.8 APA Style Results All thats left to do is write it up! APA style results sections in empirical manuscripts are typically accompanied by tables and figures. APA style discourages repeated material and encourages reducing the cognitive load of the reader. For this example, I suggest two tables  one with means and standard deviations of the groups and a second that reports the output from the one-way ANOVA. In an article with multiple statistics, the authors might wish to combine or delete these. The package apaTables can produce journal-ready tables by using the object produced by the aov() function. Deciding what to report in text and table is important. Here I create Table 1 with means and standard deviations (plus a 95% confidence interval around each mean). library(apaTables) # table.number = 1 assigns a table number to the top of the table # filename = &quot;Table1.doc&quot; writes the table to Microsoft Word and puts it in your project folder apa.1way.table(iv=COND, dv=Accurate, show.conf.interval = TRUE, data=accSIM30, table.number = 1, filename = &quot;Table1.doc&quot;) Table 1 Descriptive statistics for Accurate as a function of COND. COND M M_95%_CI SD Control 1.88 [1.70, 2.06] 0.48 Low 2.05 [1.83, 2.26] 0.57 High 1.47 [1.19, 1.76] 0.77 Note. M and SD represent mean and standard deviation, respectively. LL and UL indicate the lower and upper limits of the 95% confidence interval for the mean, respectively. The confidence interval is a plausible range of population means that could have caused a sample mean (Cumming, 2014). I will want to give the values of mean differences (\\(M_{diff}\\)) in the results. I can quickly use R to calculate them here. 1.88 - 1.47#calculating mean difference between control and high [1] 0.41 2.05 - 1.47#calculating mean difference between low and high [1] 0.58 1.88 - 2.05#calculating mean difference between control and low [1] -0.17 Here I create Table 2 with results of the one-way ANOVA. The result in Microsoft Word can be edited (e.g., I would replace the partial-eta squared with \\(\\eta^2\\)) for the journal article. apa.aov.table (accBYcond, table.number = 2, filename = &quot;Table2.doc&quot;) Table 2 ANOVA results using Accurate as the dependent variable Predictor SS df MS F p partial_eta2 CI_90_partial_eta2 (Intercept) 105.68 1 105.68 277.35 .000 COND 5.20 2 2.60 6.82 .002 .14 [.03, .24] Error 33.15 87 0.38 Note: Values in square brackets indicate the bounds of the 90% confidence interval for partial eta-squared Regarding figures, there are a number of options. I find the plotmeans() function (used earlier) to be adequate for the purpose of one-way ANOVA. As we progress through this textbook, I will demonstrate a number of options that offer more and less complexity. plotmeans (formula = Accurate ~ COND, data = accSIM30, xlab = &quot;Racial Loading Condition&quot;, ylab = &quot;Accuracy of Confederate&#39;s Impression&quot;, n.label = FALSE) With table and figure at hand, here is how I would write up these results: A one-way analysis of variance was conducted to evaluate the relationship between degree of racial loading of an exceptionalizing microaggression and the perceived accuracy of a research confederates impression of the Asian or Asian American participant. The independent variable, COND, included three levels: control/none, low, and high levels of racial loading. Results of Levenes homogeneity of variance test indicated no violation of the homogeneity of variance assumption (\\(F\\)[(2,87] = 2.274, \\(p\\) = 0.109 ). Similarly, results of the Shapiro Wilkss test indicated no violation of the normality assumption W = 0.97413, p = 0.069. Results indicated a significant effect of COND on accuracy perception \\(F\\)(2, 87) = 6.817, \\(p\\) = 0.002, \\(\\eta^2\\) = .14. In a series of post-hoc comparisons, there were statistically significant differences between the control and high (\\(M_{diff}\\) = 0.41, p = 0.013) and low and high (\\(M_{diff}\\) = 0.58, p = 0.001) conditions, but not the control and low conditions (\\(M_{diff}\\) = -.17, p = 0.290). A statistically significant polynomial contrast suggested a quadratic trend across the three, ordered, levels of the conditions (\\(t[87] = -2.69, p = .009\\)) such that perception of accuracy increased from the control to low conditions, but decreased from low to high. Consequently, it appeared that only the highest degree of racial loading (e.g., You speak English well for an Asian) resulted in the decreased perceptions of accuracy of impressions from the confederate. Means and standard deviations are presented in Table 1 and complete ANOVA results are presented in Table 2. Figure 1 provides an illustration of the results. 4.9 Practice Problems Below are three problems with graded levels of complexity. Worked examples, following the first two suggestions will be provided in an Appendix. If it is helpful for you to export and/or import the data as a .csv (think Excel lite) or .rde (R object that preserves the information about the variables  such changing COND to an ordered factor), here is the code to do so. The data should save in the same folder as the .rmd file you are working on: #write the simulated data as a .csv #write.table(accSIM30, file=&quot;accSIM.csv&quot;, sep=&quot;,&quot;, col.names=TRUE, row.names=FALSE) #bring back the simulated dat from a .csv file #acc_csv &lt;- read.csv (&quot;accSIM.csv&quot;, header = TRUE) #a quick demo to show that the .csv format loses the variable formatting #str(acc_csv) #to save the df as an .rds (think &quot;R object&quot;) file on your computer; it should save in the same file as the .rmd file you are working with #saveRDS(accSIM30, &quot;accSIM.rds&quot;) #bring back the simulated dat from an .rds file #acc_RDS &lt;- readRDS(&quot;accSIM.rds&quot;) #a quick demo to show that the .rds format preserves the variable formatting #str(acc_RDS) 4.9.1 Problem #1: Play around with this simulation. Copy the script for the simulation and then change (at least) one thing in the simulation to see how it impacts the results. If one-way ANOVA is new to you, perhaps you just change the number in set.seed(2021) from 2021 to something else. Your results should parallel those obtained in the lecture, making it easier for you to check your work as you go. If you are interested in power, change the sample size to something larger or smaller. If you are interested in variability (i.e., the homogeneity of variance assumption), perhaps you change the standard deviations in a way that violates the assumption. Using the lecture and workflow (chart) as a guide, please work through all the steps listed in the proposed assignment/grading rubric. Assignment Component Points Possible Points Earned 1. Simulate (or import) and format data 5 _____ 2. Evaluate statistical assumptions 5 _____ 3. Conduct omnibus ANOVA (w effect size) 5 _____ 4. Conduct one set of follow-up tests; narrate your choice 5 _____ 5. Describe approach for managing Type I error 5 _____ 6. APA style results with table(s) and figure 5 _____ 7. Explanation to grader 5 _____ Totals 35 _____ 4.9.2 Problem #2: Conduct a one-way ANOVA with the moreTalk dependent variable. In their study, Tran and Lee (2014) included an outcome variable where participants rated how much longer they would continue the interaction with their partner compared to their interactions in general. The scale ranged from -2 (much less than average) through 0 (average) to 2 (much more than average). Code for simulated data with moreTalk as the dependent variable is below. Using the lecture and workflow (chart) as a guide, please work through all the steps listed in the proposed assignment/grading rubric. Assignment Component Points Possible Points Earned 1. Simulate (or import) and format data 5 _____ 2. Evaluate statistical assumptions 5 _____ 3. Conduct omnibus ANOVA (w effect size) 5 _____ 4. Conduct one set of follow-up tests; narrate your choice 5 _____ 5. Describe approach for managing Type I error 5 _____ 6. APA style results with table(s) and figure 5 _____ 7. Explanation to grader 5 _____ Totals 35 _____ set.seed(2021) #sets a random seed so that we get the same results each time moreTalk &lt;- c(rnorm(30, mean=-.82, sd=0.91), rnorm(30, mean=-0.39, sd = 0.66), rnorm(30, mean = -0.04, sd = 0.71))#sample size, M and SD for each group moreTalk[moreTalk&gt;2]&lt;-2 #set upper bound for DV moreTalk[moreTalk&lt;-2]&lt;--2 #set lower bound for DV ID&lt;-factor(seq(1,90)) #IDs for participants COND&lt;-c(rep(&quot;High&quot;, 30), rep(&quot;Low&quot;, 30), rep(&quot;Control&quot;, 30)) #name factors and identify how many in each group; should be in same order as first row of script mTalk_sim30 &lt;-data.frame(ID, COND, moreTalk) #groups the 3 variables into a single df: ID#, DV, condition #to write it to an outfile write.table(mTalk_sim30, file=&quot;newmTalk30.csv&quot;, sep=&quot;,&quot;, col.names=TRUE, row.names=FALSE) 4.9.3 Problem #3: Try something entirely new. Either (a) find an article from which you can simulate data or (b) create a research vignette of your own. Specify group n, means, and standard deviations. Simulate the data with these. Be thinking about what it takes in terms of sample size, mean differences, and variability to get a statistically significant omnibus. Using the lecture and workflow (chart) as a guide, please work through all the steps listed in the proposed assignment/grading rubric. Assignment Component Points Possible Points Earned 1. Narrate the research vignette, describing the IV and DV 5 _____ 2. Simulate (or import) and format data 5 _____ 3. Evaluate statistical assumptions 5 _____ 4. Conduct omnibus ANOVA (w effect size) 5 _____ 5. Conduct one set of follow-up tests; narrate your choice 5 _____ 6. Describe approach for managing Type I error 5 _____ 7. APA style results with table(s) and figure 5 _____ 8 Explanation to grader 5 _____ Totals 35 _____ 4.10 Bonus Reel: Image of a filmstrip signifying that the what follows is considered to be supplemental Coming soon! Were hoping to have a podcast-style conversation with Dr. Alisia Tran and/or Dr. Richard M. Lee about their study. Elaboration of how data can be simulated for one-way ANOVA Further demonstration of how sample size can effect results sessionInfo() R version 4.0.4 (2021-02-15) Platform: x86_64-w64-mingw32/x64 (64-bit) Running under: Windows 10 x64 (build 18362) Matrix products: default locale: [1] LC_COLLATE=English_United States.1252 [2] LC_CTYPE=English_United States.1252 [3] LC_MONETARY=English_United States.1252 [4] LC_NUMERIC=C [5] LC_TIME=English_United States.1252 attached base packages: [1] stats graphics grDevices utils datasets methods base other attached packages: [1] pwr_1.3-0 lsr_0.5 car_3.0-10 carData_3.0-4 [5] gplots_3.1.1 MASS_7.3-53.1 apaTables_2.0.8 forcats_0.5.1 [9] stringr_1.4.0 dplyr_1.0.5 purrr_0.3.4 readr_1.4.0 [13] tidyr_1.1.3 tibble_3.1.1 ggplot2_3.3.3 tidyverse_1.3.1 [17] psych_2.1.3 loaded via a namespace (and not attached): [1] nlme_3.1-151 bitops_1.0-7 fs_1.5.0 lubridate_1.7.10 [5] MBESS_4.8.0 httr_1.4.2 tools_4.0.4 backports_1.2.1 [9] bslib_0.2.4 utf8_1.2.1 R6_2.5.0 KernSmooth_2.23-18 [13] DBI_1.1.1 colorspace_2.0-0 withr_2.4.2 tidyselect_1.1.1 [17] mnormt_2.0.2 curl_4.3.1 compiler_4.0.4 cli_2.5.0 [21] rvest_1.0.0 xml2_1.3.2 bookdown_0.22 sass_0.3.1 [25] caTools_1.18.2 scales_1.1.1 systemfonts_1.0.1 digest_0.6.27 [29] foreign_0.8-81 rmarkdown_2.7 svglite_2.0.0 rio_0.5.26 [33] pkgconfig_2.0.3 htmltools_0.5.1.1 dbplyr_2.1.1 highr_0.9 [37] rlang_0.4.11 readxl_1.3.1 rstudioapi_0.13 jquerylib_0.1.4 [41] generics_0.1.0 jsonlite_1.7.2 gtools_3.8.2 zip_2.1.1 [45] magrittr_2.0.1 Rcpp_1.0.6 munsell_0.5.0 fansi_0.4.2 [49] abind_1.4-5 lifecycle_1.0.0 stringi_1.5.3 yaml_2.2.1 [53] grid_4.0.4 parallel_4.0.4 crayon_1.4.1 lattice_0.20-41 [57] haven_2.4.1 hms_1.0.0 tmvnsim_1.0-2 knitr_1.33 [61] pillar_1.6.1 reprex_2.0.0 glue_1.4.2 evaluate_0.14 [65] data.table_1.14.0 modelr_0.1.8 vctrs_0.3.8 cellranger_1.1.0 [69] gtable_0.3.0 assertthat_0.2.1 xfun_0.22 openxlsx_4.2.3 [73] broom_0.7.6 ellipsis_0.3.2 "]]
